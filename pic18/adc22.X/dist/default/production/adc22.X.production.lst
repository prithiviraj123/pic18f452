

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 26 03:00:04 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 1.45
    27                           ; Generated 16/11/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4520 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _LATD	set	3980
    61  0000                     _LATCbits	set	3979
    62  0000                     _ADRESL	set	4035
    63  0000                     _ADRESH	set	4036
    64  0000                     _CMCON	set	4020
    65  0000                     _ADCON2	set	4032
    66  0000                     _ADCON1	set	4033
    67  0000                     _ADCON0	set	4034
    68  0000                     _TRISA	set	3986
    69  0000                     _TRISD	set	3989
    70  0000                     _TRISB	set	3987
    71  0000                     _TRISC	set	3988
    72  0000                     _PORTA	set	3968
    73  0000                     _PORTD	set	3971
    74  0000                     _PORTC	set	3970
    75  0000                     _GO	set	32273
    76                           
    77                           ; #config settings
    78                           
    79                           	psect	cinit
    80  007806                     __pcinit:
    81                           	opt stack 0
    82  007806                     start_initialization:
    83                           	opt stack 0
    84  007806                     __initialization:
    85                           	opt stack 0
    86  007806                     end_of_initialization:
    87                           	opt stack 0
    88  007806                     __end_of__initialization:
    89                           	opt stack 0
    90  007806  0100               	movlb	0
    91  007808  EF83  F03F         	goto	_main	;jump to C main() function
    92                           
    93                           	psect	cstackCOMRAM
    94  000001                     __pcstackCOMRAM:
    95                           	opt stack 0
    96  000001                     ??_pulse:
    97  000001                     ?_getvalue:
    98                           	opt stack 0
    99  000001                     ?___awdiv:
   100                           	opt stack 0
   101  000001                     ?___awmod:
   102                           	opt stack 0
   103  000001                     ?___lwdiv:
   104                           	opt stack 0
   105  000001                     ?___lwmod:
   106                           	opt stack 0
   107  000001                     ?___ftpack:
   108                           	opt stack 0
   109  000001                     ___awdiv@dividend:
   110                           	opt stack 0
   111  000001                     ___awmod@dividend:
   112                           	opt stack 0
   113  000001                     ___lwdiv@dividend:
   114                           	opt stack 0
   115  000001                     ___lwmod@dividend:
   116                           	opt stack 0
   117  000001                     ___ftpack@arg:
   118                           	opt stack 0
   119                           
   120                           ; 3 bytes @ 0x0
   121  000001                     	ds	1
   122  000002                     command@cmd:
   123                           	opt stack 0
   124  000002                     data@data:
   125                           	opt stack 0
   126                           
   127                           ; 1 bytes @ 0x1
   128  000002                     	ds	1
   129  000003                     ??_getvalue:
   130  000003                     ___awdiv@divisor:
   131                           	opt stack 0
   132  000003                     ___awmod@divisor:
   133                           	opt stack 0
   134  000003                     ___lwdiv@divisor:
   135                           	opt stack 0
   136  000003                     ___lwmod@divisor:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x2
   140  000003                     	ds	1
   141  000004                     ___ftpack@exp:
   142                           	opt stack 0
   143                           
   144                           ; 1 bytes @ 0x3
   145  000004                     	ds	1
   146  000005                     ___awdiv@counter:
   147                           	opt stack 0
   148  000005                     ___awmod@counter:
   149                           	opt stack 0
   150  000005                     ___ftpack@sign:
   151                           	opt stack 0
   152  000005                     ___lwmod@counter:
   153                           	opt stack 0
   154  000005                     getvalue@x:
   155                           	opt stack 0
   156  000005                     ___lwdiv@quotient:
   157                           	opt stack 0
   158                           
   159                           ; 2 bytes @ 0x4
   160  000005                     	ds	1
   161  000006                     ??___ftpack:
   162  000006                     ___awdiv@sign:
   163                           	opt stack 0
   164  000006                     ___awmod@sign:
   165                           	opt stack 0
   166                           
   167                           ; 1 bytes @ 0x5
   168  000006                     	ds	1
   169  000007                     ___lwdiv@counter:
   170                           	opt stack 0
   171  000007                     ___awdiv@quotient:
   172                           	opt stack 0
   173                           
   174                           ; 2 bytes @ 0x6
   175  000007                     	ds	2
   176  000009                     ?___ftdiv:
   177                           	opt stack 0
   178  000009                     ?___awtoft:
   179                           	opt stack 0
   180  000009                     dec@n:
   181                           	opt stack 0
   182  000009                     ___awtoft@c:
   183                           	opt stack 0
   184  000009                     ___ftdiv@f1:
   185                           	opt stack 0
   186                           
   187                           ; 3 bytes @ 0x8
   188  000009                     	ds	2
   189  00000B                     dec@one:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0xA
   193  00000B                     	ds	1
   194  00000C                     ___awtoft@sign:
   195                           	opt stack 0
   196  00000C                     ___ftdiv@f2:
   197                           	opt stack 0
   198                           
   199                           ; 3 bytes @ 0xB
   200  00000C                     	ds	1
   201  00000D                     dec@x1:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0xC
   205  00000D                     	ds	2
   206  00000F                     ??___ftdiv:
   207  00000F                     dec@x2:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0xE
   211  00000F                     	ds	2
   212  000011                     dec@temp:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x10
   216  000011                     	ds	1
   217  000012                     ___ftdiv@cntr:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x11
   221  000012                     	ds	1
   222  000013                     ___ftdiv@f3:
   223                           	opt stack 0
   224                           
   225                           ; 3 bytes @ 0x12
   226  000013                     	ds	3
   227  000016                     ___ftdiv@exp:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x15
   231  000016                     	ds	1
   232  000017                     ___ftdiv@sign:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0x16
   236  000017                     	ds	1
   237  000018                     ?___ftmul:
   238                           	opt stack 0
   239  000018                     ___ftmul@f1:
   240                           	opt stack 0
   241                           
   242                           ; 3 bytes @ 0x17
   243  000018                     	ds	3
   244  00001B                     ___ftmul@f2:
   245                           	opt stack 0
   246                           
   247                           ; 3 bytes @ 0x1A
   248  00001B                     	ds	3
   249  00001E                     ??___ftmul:
   250                           
   251                           ; 1 bytes @ 0x1D
   252  00001E                     	ds	3
   253  000021                     ___ftmul@exp:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x20
   257  000021                     	ds	1
   258  000022                     ___ftmul@f3_as_product:
   259                           	opt stack 0
   260                           
   261                           ; 3 bytes @ 0x21
   262  000022                     	ds	3
   263  000025                     ___ftmul@cntr:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x24
   267  000025                     	ds	1
   268  000026                     ___ftmul@sign:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x25
   272  000026                     	ds	1
   273  000027                     ?___fttol:
   274                           	opt stack 0
   275  000027                     ___fttol@f1:
   276                           	opt stack 0
   277                           
   278                           ; 3 bytes @ 0x26
   279  000027                     	ds	4
   280  00002B                     ??___fttol:
   281                           
   282                           ; 1 bytes @ 0x2A
   283  00002B                     	ds	5
   284  000030                     ___fttol@sign1:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x2F
   288  000030                     	ds	1
   289  000031                     ___fttol@lval:
   290                           	opt stack 0
   291                           
   292                           ; 4 bytes @ 0x30
   293  000031                     	ds	4
   294  000035                     ___fttol@exp1:
   295                           	opt stack 0
   296                           
   297                           ; 1 bytes @ 0x34
   298  000035                     	ds	1
   299  000036                     conv@n:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x35
   303  000036                     	ds	2
   304  000038                     conv@thou:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x37
   308  000038                     	ds	2
   309  00003A                     conv@hun:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x39
   313  00003A                     	ds	2
   314  00003C                     conv@ten:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x3B
   318  00003C                     	ds	2
   319  00003E                     conv@one:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x3D
   323  00003E                     	ds	2
   324  000040                     conv@temp:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x3F
   328  000040                     	ds	2
   329  000042                     main@y:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x41
   333  000042                     	ds	2
   334  000044                     main@x:
   335                           	opt stack 0
   336                           
   337                           ; 3 bytes @ 0x43
   338  000044                     	ds	3
   339                           
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 12 in file "adc2.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  x               3   67[COMRAM] float 
   350 ;;  y               2   65[COMRAM] int 
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2, status,0, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   360 ;;      Params:         0       0       0       0       0       0       0
   361 ;;      Locals:         5       0       0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0
   363 ;;      Totals:         5       0       0       0       0       0       0
   364 ;;Total ram usage:        5 bytes
   365 ;; Hardware stack levels required when called:    3
   366 ;; This function calls:
   367 ;;		___awtoft
   368 ;;		___ftdiv
   369 ;;		___ftmul
   370 ;;		___fttol
   371 ;;		_command
   372 ;;		_conv
   373 ;;		_dec
   374 ;;		_getvalue
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text0
   381  007F06                     __ptext0:
   382                           	opt stack 0
   383  007F06                     _main:
   384                           	opt stack 28
   385                           
   386                           ;adc2.c: 14: PORTC=0X00;
   387                           
   388                           ;incstack = 0
   389  007F06  0E00               	movlw	0
   390  007F08  6E82               	movwf	3970,c	;volatile
   391                           
   392                           ;adc2.c: 15: PORTD=0X00;
   393  007F0A  0E00               	movlw	0
   394  007F0C  6E83               	movwf	3971,c	;volatile
   395                           
   396                           ;adc2.c: 16: PORTC=0X00;
   397  007F0E  0E00               	movlw	0
   398  007F10  6E82               	movwf	3970,c	;volatile
   399                           
   400                           ;adc2.c: 17: PORTA=0X00;
   401  007F12  0E00               	movlw	0
   402  007F14  6E80               	movwf	3968,c	;volatile
   403                           
   404                           ;adc2.c: 18: TRISC=0X00;
   405  007F16  0E00               	movlw	0
   406  007F18  6E94               	movwf	3988,c	;volatile
   407                           
   408                           ;adc2.c: 19: TRISB=0X00;
   409  007F1A  0E00               	movlw	0
   410  007F1C  6E93               	movwf	3987,c	;volatile
   411                           
   412                           ;adc2.c: 20: TRISD=0X00;
   413  007F1E  0E00               	movlw	0
   414  007F20  6E95               	movwf	3989,c	;volatile
   415                           
   416                           ;adc2.c: 21: TRISA=0Xff;
   417  007F22  6892               	setf	3986,c	;volatile
   418                           
   419                           ;adc2.c: 22: ADCON0=0x00;
   420  007F24  0E00               	movlw	0
   421  007F26  6EC2               	movwf	4034,c	;volatile
   422                           
   423                           ;adc2.c: 23: ADCON1=0X0E;
   424  007F28  0E0E               	movlw	14
   425  007F2A  6EC1               	movwf	4033,c	;volatile
   426                           
   427                           ;adc2.c: 24: ADCON2=0XB6;
   428  007F2C  0EB6               	movlw	182
   429  007F2E  6EC0               	movwf	4032,c	;volatile
   430                           
   431                           ;adc2.c: 25: CMCON=0X07;
   432  007F30  0E07               	movlw	7
   433  007F32  6EB4               	movwf	4020,c	;volatile
   434                           
   435                           ;adc2.c: 26: command(0x38);
   436  007F34  0E38               	movlw	56
   437  007F36  EC06  F03C         	call	_command
   438                           
   439                           ;adc2.c: 27: command(0x0f);
   440  007F3A  0E0F               	movlw	15
   441  007F3C  EC06  F03C         	call	_command
   442                           
   443                           ;adc2.c: 28: command(0x01);
   444  007F40  0E01               	movlw	1
   445  007F42  EC06  F03C         	call	_command
   446                           
   447                           ;adc2.c: 29: ADCON0=0x01;
   448  007F46  0E01               	movlw	1
   449  007F48  6EC2               	movwf	4034,c	;volatile
   450                           
   451                           ;adc2.c: 30: float x=0;
   452  007F4A  0E00               	movlw	0
   453  007F4C  6E44               	movwf	main@x,c
   454  007F4E  0E00               	movlw	0
   455  007F50  6E45               	movwf	main@x+1,c
   456  007F52  0E00               	movlw	0
   457  007F54  6E46               	movwf	main@x+2,c
   458                           
   459                           ;adc2.c: 31: int y=0;
   460  007F56  0E00               	movlw	0
   461  007F58  6E43               	movwf	main@y+1,c
   462  007F5A  0E00               	movlw	0
   463  007F5C  6E42               	movwf	main@y,c
   464  007F5E                     l47:
   465                           
   466                           ;adc2.c: 33: {
   467                           ;adc2.c: 34: command(0x80);
   468  007F5E  0E80               	movlw	128
   469  007F60  EC06  F03C         	call	_command
   470                           
   471                           ;adc2.c: 35: x=getvalue();
   472  007F64  EC14  F03C         	call	_getvalue	;wreg free
   473  007F68  C001  F009         	movff	?_getvalue,___awtoft@c
   474  007F6C  C002  F00A         	movff	?_getvalue+1,___awtoft@c+1
   475  007F70  EC38  F03C         	call	___awtoft	;wreg free
   476  007F74  C009  F044         	movff	?___awtoft,main@x
   477  007F78  C00A  F045         	movff	?___awtoft+1,main@x+1
   478  007F7C  C00B  F046         	movff	?___awtoft+2,main@x+2
   479                           
   480                           ;adc2.c: 36: conv(x);
   481  007F80  C044  F027         	movff	main@x,___fttol@f1
   482  007F84  C045  F028         	movff	main@x+1,___fttol@f1+1
   483  007F88  C046  F029         	movff	main@x+2,___fttol@f1+2
   484  007F8C  EC09  F03F         	call	___fttol	;wreg free
   485  007F90  C027  F036         	movff	?___fttol,conv@n
   486  007F94  C028  F037         	movff	?___fttol+1,conv@n+1
   487  007F98  ECB7  F03D         	call	_conv	;wreg free
   488                           
   489                           ;adc2.c: 37: y=(x/204)*100;
   490  007F9C  0E00               	movlw	0
   491  007F9E  6E1B               	movwf	___ftmul@f2,c
   492  007FA0  0EC8               	movlw	200
   493  007FA2  6E1C               	movwf	___ftmul@f2+1,c
   494  007FA4  0E42               	movlw	66
   495  007FA6  6E1D               	movwf	___ftmul@f2+2,c
   496  007FA8  0E00               	movlw	0
   497  007FAA  6E0C               	movwf	___ftdiv@f2,c
   498  007FAC  0E4C               	movlw	76
   499  007FAE  6E0D               	movwf	___ftdiv@f2+1,c
   500  007FB0  0E43               	movlw	67
   501  007FB2  6E0E               	movwf	___ftdiv@f2+2,c
   502  007FB4  C044  F009         	movff	main@x,___ftdiv@f1
   503  007FB8  C045  F00A         	movff	main@x+1,___ftdiv@f1+1
   504  007FBC  C046  F00B         	movff	main@x+2,___ftdiv@f1+2
   505  007FC0  EC1C  F03E         	call	___ftdiv	;wreg free
   506  007FC4  C009  F018         	movff	?___ftdiv,___ftmul@f1
   507  007FC8  C00A  F019         	movff	?___ftdiv+1,___ftmul@f1+1
   508  007FCC  C00B  F01A         	movff	?___ftdiv+2,___ftmul@f1+2
   509  007FD0  EC8F  F03E         	call	___ftmul	;wreg free
   510  007FD4  C018  F027         	movff	?___ftmul,___fttol@f1
   511  007FD8  C019  F028         	movff	?___ftmul+1,___fttol@f1+1
   512  007FDC  C01A  F029         	movff	?___ftmul+2,___fttol@f1+2
   513  007FE0  EC09  F03F         	call	___fttol	;wreg free
   514  007FE4  C027  F042         	movff	?___fttol,main@y
   515  007FE8  C028  F043         	movff	?___fttol+1,main@y+1
   516                           
   517                           ;adc2.c: 38: command(0xc0);
   518  007FEC  0EC0               	movlw	192
   519  007FEE  EC06  F03C         	call	_command
   520                           
   521                           ;adc2.c: 39: dec(y);
   522  007FF2  C042  F009         	movff	main@y,dec@n
   523  007FF6  C043  F00A         	movff	main@y+1,dec@n+1
   524  007FFA  EC18  F03D         	call	_dec	;wreg free
   525  007FFE  D7AF               	goto	l47
   526  008000                     __end_of_main:
   527                           	opt stack 0
   528                           
   529 ;; *************** function _getvalue *****************
   530 ;; Defined at:
   531 ;;		line 42 in file "adc2.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  x               2    4[COMRAM] int 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  2    0[COMRAM] int 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   545 ;;      Params:         2       0       0       0       0       0       0
   546 ;;      Locals:         2       0       0       0       0       0       0
   547 ;;      Temps:          2       0       0       0       0       0       0
   548 ;;      Totals:         6       0       0       0       0       0       0
   549 ;;Total ram usage:        6 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text1
   559  007828                     __ptext1:
   560                           	opt stack 0
   561  007828                     _getvalue:
   562                           	opt stack 30
   563                           
   564                           ;adc2.c: 44: int x;
   565                           ;adc2.c: 45: GO=1;
   566                           
   567                           ;incstack = 0
   568  007828  82C2               	bsf	4034,1,c	;volatile
   569  00782A  B2C2               	btfsc	4034,1,c	;volatile
   570  00782C  D7FE               	goto	l54
   571                           
   572                           ;adc2.c: 47: x=(ADRESH*256)+ADRESL;
   573  00782E  50C4               	movf	4036,w,c	;volatile
   574  007830  6E04               	movwf	(??_getvalue+1)& (0+255),c
   575  007832  6A03               	clrf	??_getvalue& (0+255),c
   576  007834  50C3               	movf	4035,w,c	;volatile
   577  007836  2403               	addwf	??_getvalue,w,c
   578  007838  6E05               	movwf	getvalue@x,c
   579  00783A  0E00               	movlw	0
   580  00783C  2004               	addwfc	??_getvalue+1,w,c
   581  00783E  6E06               	movwf	getvalue@x+1,c
   582                           
   583                           ;adc2.c: 48: return x;
   584  007840  C005  F001         	movff	getvalue@x,?_getvalue
   585  007844  C006  F002         	movff	getvalue@x+1,?_getvalue+1
   586  007848  0012               	return	
   587  00784A                     __end_of_getvalue:
   588                           	opt stack 0
   589                           
   590 ;; *************** function _dec *****************
   591 ;; Defined at:
   592 ;;		line 70 in file "adc2.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;  n               2    8[COMRAM] int 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  temp            2   16[COMRAM] unsigned int 
   597 ;;  x2              2   14[COMRAM] unsigned int 
   598 ;;  x1              2   12[COMRAM] unsigned int 
   599 ;;  one             2   10[COMRAM] unsigned int 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   609 ;;      Params:         2       0       0       0       0       0       0
   610 ;;      Locals:         8       0       0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0       0       0
   612 ;;      Totals:        10       0       0       0       0       0       0
   613 ;;Total ram usage:       10 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; Hardware stack levels required when called:    2
   616 ;; This function calls:
   617 ;;		___awdiv
   618 ;;		___awmod
   619 ;;		___lwdiv
   620 ;;		___lwmod
   621 ;;		_data
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text2
   628  007A30                     __ptext2:
   629                           	opt stack 0
   630  007A30                     _dec:
   631                           	opt stack 28
   632                           
   633                           ;adc2.c: 72: unsigned int one,x1,x2,temp;
   634                           ;adc2.c: 73: one=n/100;
   635                           
   636                           ;incstack = 0
   637  007A30  C009  F001         	movff	dec@n,___awdiv@dividend
   638  007A34  C00A  F002         	movff	dec@n+1,___awdiv@dividend+1
   639  007A38  0E00               	movlw	0
   640  007A3A  6E04               	movwf	___awdiv@divisor+1,c
   641  007A3C  0E64               	movlw	100
   642  007A3E  6E03               	movwf	___awdiv@divisor,c
   643  007A40  ECD6  F03C         	call	___awdiv	;wreg free
   644  007A44  C001  F00B         	movff	?___awdiv,dec@one
   645  007A48  C002  F00C         	movff	?___awdiv+1,dec@one+1
   646                           
   647                           ;adc2.c: 74: temp=n%100;
   648  007A4C  C009  F001         	movff	dec@n,___awmod@dividend
   649  007A50  C00A  F002         	movff	dec@n+1,___awmod@dividend+1
   650  007A54  0E00               	movlw	0
   651  007A56  6E04               	movwf	___awmod@divisor+1,c
   652  007A58  0E64               	movlw	100
   653  007A5A  6E03               	movwf	___awmod@divisor,c
   654  007A5C  EC9E  F03C         	call	___awmod	;wreg free
   655  007A60  C001  F011         	movff	?___awmod,dec@temp
   656  007A64  C002  F012         	movff	?___awmod+1,dec@temp+1
   657                           
   658                           ;adc2.c: 75: x1=temp/10;
   659  007A68  C011  F001         	movff	dec@temp,___lwdiv@dividend
   660  007A6C  C012  F002         	movff	dec@temp+1,___lwdiv@dividend+1
   661  007A70  0E00               	movlw	0
   662  007A72  6E04               	movwf	___lwdiv@divisor+1,c
   663  007A74  0E0A               	movlw	10
   664  007A76  6E03               	movwf	___lwdiv@divisor,c
   665  007A78  EC75  F03C         	call	___lwdiv	;wreg free
   666  007A7C  C001  F00D         	movff	?___lwdiv,dec@x1
   667  007A80  C002  F00E         	movff	?___lwdiv+1,dec@x1+1
   668                           
   669                           ;adc2.c: 76: x2=temp%10;
   670  007A84  C011  F001         	movff	dec@temp,___lwmod@dividend
   671  007A88  C012  F002         	movff	dec@temp+1,___lwmod@dividend+1
   672  007A8C  0E00               	movlw	0
   673  007A8E  6E04               	movwf	___lwmod@divisor+1,c
   674  007A90  0E0A               	movlw	10
   675  007A92  6E03               	movwf	___lwmod@divisor,c
   676  007A94  EC54  F03C         	call	___lwmod	;wreg free
   677  007A98  C001  F00F         	movff	?___lwmod,dec@x2
   678  007A9C  C002  F010         	movff	?___lwmod+1,dec@x2+1
   679                           
   680                           ;adc2.c: 77: data(one+48);
   681  007AA0  500B               	movf	dec@one,w,c
   682  007AA2  0F30               	addlw	48
   683  007AA4  EC0D  F03C         	call	_data
   684                           
   685                           ;adc2.c: 78: data('.');
   686  007AA8  0E2E               	movlw	46
   687  007AAA  EC0D  F03C         	call	_data
   688                           
   689                           ;adc2.c: 79: data(x1+48);
   690  007AAE  500D               	movf	dec@x1,w,c
   691  007AB0  0F30               	addlw	48
   692  007AB2  EC0D  F03C         	call	_data
   693                           
   694                           ;adc2.c: 80: data(x2+48);
   695  007AB6  500F               	movf	dec@x2,w,c
   696  007AB8  0F30               	addlw	48
   697  007ABA  EC0D  F03C         	call	_data
   698  007ABE  0012               	return		;funcret
   699  007AC0                     __end_of_dec:
   700                           	opt stack 0
   701                           
   702 ;; *************** function ___lwmod *****************
   703 ;; Defined at:
   704 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  dividend        2    0[COMRAM] unsigned int 
   707 ;;  divisor         2    2[COMRAM] unsigned int 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  counter         1    4[COMRAM] unsigned char 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  2    0[COMRAM] unsigned int 
   712 ;; Registers used:
   713 ;;		wreg, status,2, status,0
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   719 ;;      Params:         4       0       0       0       0       0       0
   720 ;;      Locals:         1       0       0       0       0       0       0
   721 ;;      Temps:          0       0       0       0       0       0       0
   722 ;;      Totals:         5       0       0       0       0       0       0
   723 ;;Total ram usage:        5 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; This function calls:
   726 ;;		Nothing
   727 ;; This function is called by:
   728 ;;		_dec
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text3
   733  0078A8                     __ptext3:
   734                           	opt stack 0
   735  0078A8                     ___lwmod:
   736                           	opt stack 29
   737                           
   738                           ;incstack = 0
   739  0078A8  5003               	movf	___lwmod@divisor,w,c
   740  0078AA  1004               	iorwf	___lwmod@divisor+1,w,c
   741  0078AC  B4D8               	btfsc	status,2,c
   742  0078AE  D018               	goto	l490
   743  0078B0  0E01               	movlw	1
   744  0078B2  6E05               	movwf	___lwmod@counter,c
   745  0078B4  D004               	goto	l485
   746  0078B6  90D8               	bcf	status,0,c
   747  0078B8  3603               	rlcf	___lwmod@divisor,f,c
   748  0078BA  3604               	rlcf	___lwmod@divisor+1,f,c
   749  0078BC  2A05               	incf	___lwmod@counter,f,c
   750  0078BE                     l485:
   751  0078BE  AE04               	btfss	___lwmod@divisor+1,7,c
   752  0078C0  D7FA               	goto	l486
   753  0078C2                     u720:
   754  0078C2  5003               	movf	___lwmod@divisor,w,c
   755  0078C4  5C01               	subwf	___lwmod@dividend,w,c
   756  0078C6  5004               	movf	___lwmod@divisor+1,w,c
   757  0078C8  5802               	subwfb	___lwmod@dividend+1,w,c
   758  0078CA  A0D8               	btfss	status,0,c
   759  0078CC  D004               	goto	l489
   760  0078CE  5003               	movf	___lwmod@divisor,w,c
   761  0078D0  5E01               	subwf	___lwmod@dividend,f,c
   762  0078D2  5004               	movf	___lwmod@divisor+1,w,c
   763  0078D4  5A02               	subwfb	___lwmod@dividend+1,f,c
   764  0078D6                     l489:
   765  0078D6  90D8               	bcf	status,0,c
   766  0078D8  3204               	rrcf	___lwmod@divisor+1,f,c
   767  0078DA  3203               	rrcf	___lwmod@divisor,f,c
   768  0078DC  2E05               	decfsz	___lwmod@counter,f,c
   769  0078DE  D7F1               	goto	u720
   770  0078E0                     l490:
   771  0078E0  C001  F001         	movff	___lwmod@dividend,?___lwmod
   772  0078E4  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   773  0078E8  0012               	return		;funcret
   774  0078EA                     __end_of___lwmod:
   775                           	opt stack 0
   776                           status	equ	0xFD8
   777                           
   778 ;; *************** function ___lwdiv *****************
   779 ;; Defined at:
   780 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  dividend        2    0[COMRAM] unsigned int 
   783 ;;  divisor         2    2[COMRAM] unsigned int 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  quotient        2    4[COMRAM] unsigned int 
   786 ;;  counter         1    6[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2    0[COMRAM] unsigned int 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   796 ;;      Params:         4       0       0       0       0       0       0
   797 ;;      Locals:         3       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0
   799 ;;      Totals:         7       0       0       0       0       0       0
   800 ;;Total ram usage:        7 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_dec
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text4
   810  0078EA                     __ptext4:
   811                           	opt stack 0
   812  0078EA                     ___lwdiv:
   813                           	opt stack 29
   814                           
   815                           ;incstack = 0
   816  0078EA  0E00               	movlw	0
   817  0078EC  6E06               	movwf	___lwdiv@quotient+1,c
   818  0078EE  0E00               	movlw	0
   819  0078F0  6E05               	movwf	___lwdiv@quotient,c
   820  0078F2  5003               	movf	___lwdiv@divisor,w,c
   821  0078F4  1004               	iorwf	___lwdiv@divisor+1,w,c
   822  0078F6  B4D8               	btfsc	status,2,c
   823  0078F8  D01C               	goto	l480
   824  0078FA  0E01               	movlw	1
   825  0078FC  6E07               	movwf	___lwdiv@counter,c
   826  0078FE  D004               	goto	l475
   827  007900  90D8               	bcf	status,0,c
   828  007902  3603               	rlcf	___lwdiv@divisor,f,c
   829  007904  3604               	rlcf	___lwdiv@divisor+1,f,c
   830  007906  2A07               	incf	___lwdiv@counter,f,c
   831  007908                     l475:
   832  007908  AE04               	btfss	___lwdiv@divisor+1,7,c
   833  00790A  D7FA               	goto	l476
   834  00790C                     u690:
   835  00790C  90D8               	bcf	status,0,c
   836  00790E  3605               	rlcf	___lwdiv@quotient,f,c
   837  007910  3606               	rlcf	___lwdiv@quotient+1,f,c
   838  007912  5003               	movf	___lwdiv@divisor,w,c
   839  007914  5C01               	subwf	___lwdiv@dividend,w,c
   840  007916  5004               	movf	___lwdiv@divisor+1,w,c
   841  007918  5802               	subwfb	___lwdiv@dividend+1,w,c
   842  00791A  A0D8               	btfss	status,0,c
   843  00791C  D005               	goto	l479
   844  00791E  5003               	movf	___lwdiv@divisor,w,c
   845  007920  5E01               	subwf	___lwdiv@dividend,f,c
   846  007922  5004               	movf	___lwdiv@divisor+1,w,c
   847  007924  5A02               	subwfb	___lwdiv@dividend+1,f,c
   848  007926  8005               	bsf	___lwdiv@quotient,0,c
   849  007928                     l479:
   850  007928  90D8               	bcf	status,0,c
   851  00792A  3204               	rrcf	___lwdiv@divisor+1,f,c
   852  00792C  3203               	rrcf	___lwdiv@divisor,f,c
   853  00792E  2E07               	decfsz	___lwdiv@counter,f,c
   854  007930  D7ED               	goto	u690
   855  007932                     l480:
   856  007932  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   857  007936  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   858  00793A  0012               	return		;funcret
   859  00793C                     __end_of___lwdiv:
   860                           	opt stack 0
   861                           status	equ	0xFD8
   862                           
   863 ;; *************** function _conv *****************
   864 ;; Defined at:
   865 ;;		line 82 in file "adc2.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  n               2   53[COMRAM] int 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  temp            2   63[COMRAM] int 
   870 ;;  one             2   61[COMRAM] int 
   871 ;;  ten             2   59[COMRAM] int 
   872 ;;  hun             2   57[COMRAM] int 
   873 ;;  thou            2   55[COMRAM] int 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   883 ;;      Params:         2       0       0       0       0       0       0
   884 ;;      Locals:        10       0       0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0       0       0
   886 ;;      Totals:        12       0       0       0       0       0       0
   887 ;;Total ram usage:       12 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    2
   890 ;; This function calls:
   891 ;;		___awdiv
   892 ;;		___awmod
   893 ;;		_data
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text5
   900  007B6E                     __ptext5:
   901                           	opt stack 0
   902  007B6E                     _conv:
   903                           	opt stack 28
   904                           
   905                           ;adc2.c: 84: int thou,hun,ten,one;
   906                           ;adc2.c: 85: int temp;
   907                           ;adc2.c: 86: thou=n/1000;
   908                           
   909                           ;incstack = 0
   910  007B6E  C036  F001         	movff	conv@n,___awdiv@dividend
   911  007B72  C037  F002         	movff	conv@n+1,___awdiv@dividend+1
   912  007B76  0E03               	movlw	3
   913  007B78  6E04               	movwf	___awdiv@divisor+1,c
   914  007B7A  0EE8               	movlw	232
   915  007B7C  6E03               	movwf	___awdiv@divisor,c
   916  007B7E  ECD6  F03C         	call	___awdiv	;wreg free
   917  007B82  C001  F038         	movff	?___awdiv,conv@thou
   918  007B86  C002  F039         	movff	?___awdiv+1,conv@thou+1
   919                           
   920                           ;adc2.c: 87: temp=n%1000;
   921  007B8A  C036  F001         	movff	conv@n,___awmod@dividend
   922  007B8E  C037  F002         	movff	conv@n+1,___awmod@dividend+1
   923  007B92  0E03               	movlw	3
   924  007B94  6E04               	movwf	___awmod@divisor+1,c
   925  007B96  0EE8               	movlw	232
   926  007B98  6E03               	movwf	___awmod@divisor,c
   927  007B9A  EC9E  F03C         	call	___awmod	;wreg free
   928  007B9E  C001  F040         	movff	?___awmod,conv@temp
   929  007BA2  C002  F041         	movff	?___awmod+1,conv@temp+1
   930                           
   931                           ;adc2.c: 88: hun=temp/100;
   932  007BA6  C040  F001         	movff	conv@temp,___awdiv@dividend
   933  007BAA  C041  F002         	movff	conv@temp+1,___awdiv@dividend+1
   934  007BAE  0E00               	movlw	0
   935  007BB0  6E04               	movwf	___awdiv@divisor+1,c
   936  007BB2  0E64               	movlw	100
   937  007BB4  6E03               	movwf	___awdiv@divisor,c
   938  007BB6  ECD6  F03C         	call	___awdiv	;wreg free
   939  007BBA  C001  F03A         	movff	?___awdiv,conv@hun
   940  007BBE  C002  F03B         	movff	?___awdiv+1,conv@hun+1
   941                           
   942                           ;adc2.c: 89: temp=temp%100;
   943  007BC2  C040  F001         	movff	conv@temp,___awmod@dividend
   944  007BC6  C041  F002         	movff	conv@temp+1,___awmod@dividend+1
   945  007BCA  0E00               	movlw	0
   946  007BCC  6E04               	movwf	___awmod@divisor+1,c
   947  007BCE  0E64               	movlw	100
   948  007BD0  6E03               	movwf	___awmod@divisor,c
   949  007BD2  EC9E  F03C         	call	___awmod	;wreg free
   950  007BD6  C001  F040         	movff	?___awmod,conv@temp
   951  007BDA  C002  F041         	movff	?___awmod+1,conv@temp+1
   952                           
   953                           ;adc2.c: 90: ten=temp/10;
   954  007BDE  C040  F001         	movff	conv@temp,___awdiv@dividend
   955  007BE2  C041  F002         	movff	conv@temp+1,___awdiv@dividend+1
   956  007BE6  0E00               	movlw	0
   957  007BE8  6E04               	movwf	___awdiv@divisor+1,c
   958  007BEA  0E0A               	movlw	10
   959  007BEC  6E03               	movwf	___awdiv@divisor,c
   960  007BEE  ECD6  F03C         	call	___awdiv	;wreg free
   961  007BF2  C001  F03C         	movff	?___awdiv,conv@ten
   962  007BF6  C002  F03D         	movff	?___awdiv+1,conv@ten+1
   963                           
   964                           ;adc2.c: 91: one=temp%10;
   965  007BFA  C040  F001         	movff	conv@temp,___awmod@dividend
   966  007BFE  C041  F002         	movff	conv@temp+1,___awmod@dividend+1
   967  007C02  0E00               	movlw	0
   968  007C04  6E04               	movwf	___awmod@divisor+1,c
   969  007C06  0E0A               	movlw	10
   970  007C08  6E03               	movwf	___awmod@divisor,c
   971  007C0A  EC9E  F03C         	call	___awmod	;wreg free
   972  007C0E  C001  F03E         	movff	?___awmod,conv@one
   973  007C12  C002  F03F         	movff	?___awmod+1,conv@one+1
   974                           
   975                           ;adc2.c: 93: data(thou+48);
   976  007C16  5038               	movf	conv@thou,w,c
   977  007C18  0F30               	addlw	48
   978  007C1A  EC0D  F03C         	call	_data
   979                           
   980                           ;adc2.c: 94: data(hun+48);
   981  007C1E  503A               	movf	conv@hun,w,c
   982  007C20  0F30               	addlw	48
   983  007C22  EC0D  F03C         	call	_data
   984                           
   985                           ;adc2.c: 95: data(ten+48);
   986  007C26  503C               	movf	conv@ten,w,c
   987  007C28  0F30               	addlw	48
   988  007C2A  EC0D  F03C         	call	_data
   989                           
   990                           ;adc2.c: 96: data(one+48);
   991  007C2E  503E               	movf	conv@one,w,c
   992  007C30  0F30               	addlw	48
   993  007C32  EC0D  F03C         	call	_data
   994  007C36  0012               	return		;funcret
   995  007C38                     __end_of_conv:
   996                           	opt stack 0
   997                           status	equ	0xFD8
   998                           
   999 ;; *************** function _data *****************
  1000 ;; Defined at:
  1001 ;;		line 63 in file "adc2.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  data            1    wreg     unsigned char 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  data            1    1[COMRAM] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1015 ;;      Params:         0       0       0       0       0       0       0
  1016 ;;      Locals:         1       0       0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0
  1018 ;;      Totals:         1       0       0       0       0       0       0
  1019 ;;Total ram usage:        1 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    1
  1022 ;; This function calls:
  1023 ;;		_pulse
  1024 ;; This function is called by:
  1025 ;;		_dec
  1026 ;;		_conv
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text6
  1031  00781A                     __ptext6:
  1032                           	opt stack 0
  1033  00781A                     _data:
  1034                           	opt stack 28
  1035                           
  1036                           ;incstack = 0
  1037                           ;data@data stored from wreg
  1038  00781A  6E02               	movwf	data@data,c
  1039                           
  1040                           ;adc2.c: 65: LATCbits.LC0=1;
  1041  00781C  808B               	bsf	3979,0,c	;volatile
  1042                           
  1043                           ;adc2.c: 66: LATD=data;
  1044  00781E  C002  FF8C         	movff	data@data,3980	;volatile
  1045                           
  1046                           ;adc2.c: 67: pulse();
  1047  007822  EC25  F03C         	call	_pulse	;wreg free
  1048  007826  0012               	return		;funcret
  1049  007828                     __end_of_data:
  1050                           	opt stack 0
  1051                           status	equ	0xFD8
  1052                           
  1053 ;; *************** function ___awmod *****************
  1054 ;; Defined at:
  1055 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  dividend        2    0[COMRAM] int 
  1058 ;;  divisor         2    2[COMRAM] int 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  sign            1    5[COMRAM] unsigned char 
  1061 ;;  counter         1    4[COMRAM] unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  2    0[COMRAM] int 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1071 ;;      Params:         4       0       0       0       0       0       0
  1072 ;;      Locals:         2       0       0       0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0       0       0
  1074 ;;      Totals:         6       0       0       0       0       0       0
  1075 ;;Total ram usage:        6 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_dec
  1081 ;;		_conv
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text7
  1086  00793C                     __ptext7:
  1087                           	opt stack 0
  1088  00793C                     ___awmod:
  1089                           	opt stack 29
  1090                           
  1091                           ;incstack = 0
  1092  00793C  0E00               	movlw	0
  1093  00793E  6E06               	movwf	___awmod@sign,c
  1094  007940  AE02               	btfss	___awmod@dividend+1,7,c
  1095  007942  D006               	goto	l252
  1096  007944  6C01               	negf	___awmod@dividend,c
  1097  007946  1E02               	comf	___awmod@dividend+1,f,c
  1098  007948  B0D8               	btfsc	status,0,c
  1099  00794A  2A02               	incf	___awmod@dividend+1,f,c
  1100  00794C  0E01               	movlw	1
  1101  00794E  6E06               	movwf	___awmod@sign,c
  1102  007950                     l252:
  1103  007950  AE04               	btfss	___awmod@divisor+1,7,c
  1104  007952  D004               	goto	l253
  1105  007954  6C03               	negf	___awmod@divisor,c
  1106  007956  1E04               	comf	___awmod@divisor+1,f,c
  1107  007958  B0D8               	btfsc	status,0,c
  1108  00795A  2A04               	incf	___awmod@divisor+1,f,c
  1109  00795C                     l253:
  1110  00795C  5003               	movf	___awmod@divisor,w,c
  1111  00795E  1004               	iorwf	___awmod@divisor+1,w,c
  1112  007960  B4D8               	btfsc	status,2,c
  1113  007962  D018               	goto	l260
  1114  007964  0E01               	movlw	1
  1115  007966  6E05               	movwf	___awmod@counter,c
  1116  007968  D004               	goto	l255
  1117  00796A  90D8               	bcf	status,0,c
  1118  00796C  3603               	rlcf	___awmod@divisor,f,c
  1119  00796E  3604               	rlcf	___awmod@divisor+1,f,c
  1120  007970  2A05               	incf	___awmod@counter,f,c
  1121  007972                     l255:
  1122  007972  AE04               	btfss	___awmod@divisor+1,7,c
  1123  007974  D7FA               	goto	l256
  1124  007976                     u650:
  1125  007976  5003               	movf	___awmod@divisor,w,c
  1126  007978  5C01               	subwf	___awmod@dividend,w,c
  1127  00797A  5004               	movf	___awmod@divisor+1,w,c
  1128  00797C  5802               	subwfb	___awmod@dividend+1,w,c
  1129  00797E  A0D8               	btfss	status,0,c
  1130  007980  D004               	goto	l259
  1131  007982  5003               	movf	___awmod@divisor,w,c
  1132  007984  5E01               	subwf	___awmod@dividend,f,c
  1133  007986  5004               	movf	___awmod@divisor+1,w,c
  1134  007988  5A02               	subwfb	___awmod@dividend+1,f,c
  1135  00798A                     l259:
  1136  00798A  90D8               	bcf	status,0,c
  1137  00798C  3204               	rrcf	___awmod@divisor+1,f,c
  1138  00798E  3203               	rrcf	___awmod@divisor,f,c
  1139  007990  2E05               	decfsz	___awmod@counter,f,c
  1140  007992  D7F1               	goto	u650
  1141  007994                     l260:
  1142  007994  5006               	movf	___awmod@sign,w,c
  1143  007996  B4D8               	btfsc	status,2,c
  1144  007998  D004               	goto	l261
  1145  00799A  6C01               	negf	___awmod@dividend,c
  1146  00799C  1E02               	comf	___awmod@dividend+1,f,c
  1147  00799E  B0D8               	btfsc	status,0,c
  1148  0079A0  2A02               	incf	___awmod@dividend+1,f,c
  1149  0079A2                     l261:
  1150  0079A2  C001  F001         	movff	___awmod@dividend,?___awmod
  1151  0079A6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1152  0079AA  0012               	return	
  1153  0079AC                     __end_of___awmod:
  1154                           	opt stack 0
  1155                           status	equ	0xFD8
  1156                           
  1157 ;; *************** function ___awdiv *****************
  1158 ;; Defined at:
  1159 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  dividend        2    0[COMRAM] int 
  1162 ;;  divisor         2    2[COMRAM] int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  quotient        2    6[COMRAM] int 
  1165 ;;  sign            1    5[COMRAM] unsigned char 
  1166 ;;  counter         1    4[COMRAM] unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2    0[COMRAM] int 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1176 ;;      Params:         4       0       0       0       0       0       0
  1177 ;;      Locals:         4       0       0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0
  1179 ;;      Totals:         8       0       0       0       0       0       0
  1180 ;;Total ram usage:        8 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_dec
  1186 ;;		_conv
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text8
  1191  0079AC                     __ptext8:
  1192                           	opt stack 0
  1193  0079AC                     ___awdiv:
  1194                           	opt stack 29
  1195                           
  1196                           ;incstack = 0
  1197  0079AC  0E00               	movlw	0
  1198  0079AE  6E06               	movwf	___awdiv@sign,c
  1199  0079B0  AE04               	btfss	___awdiv@divisor+1,7,c
  1200  0079B2  D006               	goto	l239
  1201  0079B4  6C03               	negf	___awdiv@divisor,c
  1202  0079B6  1E04               	comf	___awdiv@divisor+1,f,c
  1203  0079B8  B0D8               	btfsc	status,0,c
  1204  0079BA  2A04               	incf	___awdiv@divisor+1,f,c
  1205  0079BC  0E01               	movlw	1
  1206  0079BE  6E06               	movwf	___awdiv@sign,c
  1207  0079C0                     l239:
  1208  0079C0  AE02               	btfss	___awdiv@dividend+1,7,c
  1209  0079C2  D006               	goto	l240
  1210  0079C4  6C01               	negf	___awdiv@dividend,c
  1211  0079C6  1E02               	comf	___awdiv@dividend+1,f,c
  1212  0079C8  B0D8               	btfsc	status,0,c
  1213  0079CA  2A02               	incf	___awdiv@dividend+1,f,c
  1214  0079CC  0E01               	movlw	1
  1215  0079CE  1A06               	xorwf	___awdiv@sign,f,c
  1216  0079D0                     l240:
  1217  0079D0  0E00               	movlw	0
  1218  0079D2  6E08               	movwf	___awdiv@quotient+1,c
  1219  0079D4  0E00               	movlw	0
  1220  0079D6  6E07               	movwf	___awdiv@quotient,c
  1221  0079D8  5003               	movf	___awdiv@divisor,w,c
  1222  0079DA  1004               	iorwf	___awdiv@divisor+1,w,c
  1223  0079DC  B4D8               	btfsc	status,2,c
  1224  0079DE  D01C               	goto	l247
  1225  0079E0  0E01               	movlw	1
  1226  0079E2  6E05               	movwf	___awdiv@counter,c
  1227  0079E4  D004               	goto	l242
  1228  0079E6  90D8               	bcf	status,0,c
  1229  0079E8  3603               	rlcf	___awdiv@divisor,f,c
  1230  0079EA  3604               	rlcf	___awdiv@divisor+1,f,c
  1231  0079EC  2A05               	incf	___awdiv@counter,f,c
  1232  0079EE                     l242:
  1233  0079EE  AE04               	btfss	___awdiv@divisor+1,7,c
  1234  0079F0  D7FA               	goto	l243
  1235  0079F2                     u590:
  1236  0079F2  90D8               	bcf	status,0,c
  1237  0079F4  3607               	rlcf	___awdiv@quotient,f,c
  1238  0079F6  3608               	rlcf	___awdiv@quotient+1,f,c
  1239  0079F8  5003               	movf	___awdiv@divisor,w,c
  1240  0079FA  5C01               	subwf	___awdiv@dividend,w,c
  1241  0079FC  5004               	movf	___awdiv@divisor+1,w,c
  1242  0079FE  5802               	subwfb	___awdiv@dividend+1,w,c
  1243  007A00  A0D8               	btfss	status,0,c
  1244  007A02  D005               	goto	l246
  1245  007A04  5003               	movf	___awdiv@divisor,w,c
  1246  007A06  5E01               	subwf	___awdiv@dividend,f,c
  1247  007A08  5004               	movf	___awdiv@divisor+1,w,c
  1248  007A0A  5A02               	subwfb	___awdiv@dividend+1,f,c
  1249  007A0C  8007               	bsf	___awdiv@quotient,0,c
  1250  007A0E                     l246:
  1251  007A0E  90D8               	bcf	status,0,c
  1252  007A10  3204               	rrcf	___awdiv@divisor+1,f,c
  1253  007A12  3203               	rrcf	___awdiv@divisor,f,c
  1254  007A14  2E05               	decfsz	___awdiv@counter,f,c
  1255  007A16  D7ED               	goto	u590
  1256  007A18                     l247:
  1257  007A18  5006               	movf	___awdiv@sign,w,c
  1258  007A1A  B4D8               	btfsc	status,2,c
  1259  007A1C  D004               	goto	l248
  1260  007A1E  6C07               	negf	___awdiv@quotient,c
  1261  007A20  1E08               	comf	___awdiv@quotient+1,f,c
  1262  007A22  B0D8               	btfsc	status,0,c
  1263  007A24  2A08               	incf	___awdiv@quotient+1,f,c
  1264  007A26                     l248:
  1265  007A26  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1266  007A2A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1267  007A2E  0012               	return	
  1268  007A30                     __end_of___awdiv:
  1269                           	opt stack 0
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _command *****************
  1273 ;; Defined at:
  1274 ;;		line 57 in file "adc2.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  cmd             1    wreg     unsigned char 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  cmd             1    1[COMRAM] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1288 ;;      Params:         0       0       0       0       0       0       0
  1289 ;;      Locals:         1       0       0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0
  1291 ;;      Totals:         1       0       0       0       0       0       0
  1292 ;;Total ram usage:        1 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    1
  1295 ;; This function calls:
  1296 ;;		_pulse
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text9
  1303  00780C                     __ptext9:
  1304                           	opt stack 0
  1305  00780C                     _command:
  1306                           	opt stack 29
  1307                           
  1308                           ;incstack = 0
  1309                           ;command@cmd stored from wreg
  1310  00780C  6E02               	movwf	command@cmd,c
  1311                           
  1312                           ;adc2.c: 59: LATCbits.LC0=0;
  1313  00780E  908B               	bcf	3979,0,c	;volatile
  1314                           
  1315                           ;adc2.c: 60: LATD=cmd;
  1316  007810  C002  FF8C         	movff	command@cmd,3980	;volatile
  1317                           
  1318                           ;adc2.c: 61: pulse();
  1319  007814  EC25  F03C         	call	_pulse	;wreg free
  1320  007818  0012               	return		;funcret
  1321  00781A                     __end_of_command:
  1322                           	opt stack 0
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _pulse *****************
  1326 ;; Defined at:
  1327 ;;		line 50 in file "adc2.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1341 ;;      Params:         0       0       0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0
  1343 ;;      Temps:          1       0       0       0       0       0       0
  1344 ;;      Totals:         1       0       0       0       0       0       0
  1345 ;;Total ram usage:        1 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_command
  1351 ;;		_data
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text10
  1356  00784A                     __ptext10:
  1357                           	opt stack 0
  1358  00784A                     _pulse:
  1359                           	opt stack 28
  1360                           
  1361                           ;adc2.c: 52: LATCbits.LC1=1;
  1362                           
  1363                           ;incstack = 0
  1364  00784A  828B               	bsf	3979,1,c	;volatile
  1365                           
  1366                           ;adc2.c: 53: _delay((unsigned long)((10)*(20000000/4000.0)));
  1367  00784C  0E41               	movlw	65
  1368  00784E  6E01               	movwf	??_pulse& (0+255),c
  1369  007850  0EEE               	movlw	238
  1370  007852                     u957:
  1371  007852  2EE8               	decfsz	wreg,f,c
  1372  007854  D7FE               	bra	u957
  1373  007856  2E01               	decfsz	??_pulse& (0+255),f,c
  1374  007858  D7FC               	bra	u957
  1375  00785A  D000               	nop2	
  1376                           
  1377                           ;adc2.c: 54: LATCbits.LC1=0;
  1378  00785C  928B               	bcf	3979,1,c	;volatile
  1379                           
  1380                           ;adc2.c: 55: _delay((unsigned long)((10)*(20000000/4000.0)));
  1381  00785E  0E41               	movlw	65
  1382  007860  6E01               	movwf	??_pulse& (0+255),c
  1383  007862  0EEE               	movlw	238
  1384  007864                     u967:
  1385  007864  2EE8               	decfsz	wreg,f,c
  1386  007866  D7FE               	bra	u967
  1387  007868  2E01               	decfsz	??_pulse& (0+255),f,c
  1388  00786A  D7FC               	bra	u967
  1389  00786C  D000               	nop2	
  1390  00786E  0012               	return		;funcret
  1391  007870                     __end_of_pulse:
  1392                           	opt stack 0
  1393                           wreg	equ	0xFE8
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function ___fttol *****************
  1397 ;; Defined at:
  1398 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  f1              3   38[COMRAM] float 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  lval            4   48[COMRAM] unsigned long 
  1403 ;;  exp1            1   52[COMRAM] unsigned char 
  1404 ;;  sign1           1   47[COMRAM] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  4   38[COMRAM] long 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2, status,0
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1414 ;;      Params:         4       0       0       0       0       0       0
  1415 ;;      Locals:         6       0       0       0       0       0       0
  1416 ;;      Temps:          5       0       0       0       0       0       0
  1417 ;;      Totals:        15       0       0       0       0       0       0
  1418 ;;Total ram usage:       15 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text11
  1428  007E12                     __ptext11:
  1429                           	opt stack 0
  1430  007E12                     ___fttol:
  1431                           	opt stack 30
  1432                           
  1433                           ;incstack = 0
  1434  007E12  C029  F02B         	movff	___fttol@f1+2,??___fttol
  1435  007E16  6A2C               	clrf	(??___fttol+1)& (0+255),c
  1436  007E18  6A2D               	clrf	(??___fttol+2)& (0+255),c
  1437  007E1A  3428               	rlcf	___fttol@f1+1,w,c
  1438  007E1C  362B               	rlcf	??___fttol& (0+255),f,c
  1439  007E1E  E301               	bnc	u871
  1440  007E20  802C               	bsf	(??___fttol+1)& (0+255),0,c
  1441  007E22                     u871:
  1442  007E22  502B               	movf	??___fttol,w,c
  1443  007E24  6E35               	movwf	___fttol@exp1,c
  1444  007E26  5035               	movf	___fttol@exp1,w,c
  1445  007E28  A4D8               	btfss	status,2,c
  1446  007E2A  D009               	goto	l386
  1447  007E2C  0E00               	movlw	0
  1448  007E2E  6E27               	movwf	?___fttol,c
  1449  007E30  0E00               	movlw	0
  1450  007E32  6E28               	movwf	?___fttol+1,c
  1451  007E34  0E00               	movlw	0
  1452  007E36  6E29               	movwf	?___fttol+2,c
  1453  007E38  0E00               	movlw	0
  1454  007E3A  6E2A               	movwf	?___fttol+3,c
  1455  007E3C  0012               	return	
  1456  007E3E                     l386:
  1457  007E3E  0E17               	movlw	23
  1458  007E40  6E2B               	movwf	??___fttol& (0+255),c
  1459  007E42  C027  F02C         	movff	___fttol@f1,??___fttol+1
  1460  007E46  C028  F02D         	movff	___fttol@f1+1,??___fttol+2
  1461  007E4A  C029  F02E         	movff	___fttol@f1+2,??___fttol+3
  1462  007E4E  282B               	incf	??___fttol,w,c
  1463  007E50  6E2F               	movwf	(??___fttol+4)& (0+255),c
  1464  007E52  D004               	goto	u890
  1465  007E54                     u895:
  1466  007E54  90D8               	bcf	status,0,c
  1467  007E56  322E               	rrcf	??___fttol+3,f,c
  1468  007E58  322D               	rrcf	??___fttol+2,f,c
  1469  007E5A  322C               	rrcf	??___fttol+1,f,c
  1470  007E5C                     u890:
  1471  007E5C  2E2F               	decfsz	(??___fttol+4)& (0+255),f,c
  1472  007E5E  D7FA               	goto	u895
  1473  007E60  502C               	movf	??___fttol+1,w,c
  1474  007E62  6E30               	movwf	___fttol@sign1,c
  1475  007E64  8E28               	bsf	___fttol@f1+1,7,c
  1476  007E66  0EFF               	movlw	255
  1477  007E68  1627               	andwf	___fttol@f1,f,c
  1478  007E6A  0EFF               	movlw	255
  1479  007E6C  1628               	andwf	___fttol@f1+1,f,c
  1480  007E6E  0E00               	movlw	0
  1481  007E70  1629               	andwf	___fttol@f1+2,f,c
  1482  007E72  5027               	movf	___fttol@f1,w,c
  1483  007E74  6E31               	movwf	___fttol@lval,c
  1484  007E76  5028               	movf	___fttol@f1+1,w,c
  1485  007E78  6E32               	movwf	___fttol@lval+1,c
  1486  007E7A  5029               	movf	___fttol@f1+2,w,c
  1487  007E7C  6E33               	movwf	___fttol@lval+2,c
  1488  007E7E  6A34               	clrf	___fttol@lval+3,c
  1489  007E80  0E8E               	movlw	142
  1490  007E82  5E35               	subwf	___fttol@exp1,f,c
  1491  007E84  AE35               	btfss	___fttol@exp1,7,c
  1492  007E86  D016               	goto	l388
  1493  007E88  5035               	movf	___fttol@exp1,w,c
  1494  007E8A  0A80               	xorlw	128
  1495  007E8C  0F8F               	addlw	143
  1496  007E8E  B0D8               	btfsc	status,0,c
  1497  007E90  D009               	goto	l389
  1498  007E92  0E00               	movlw	0
  1499  007E94  6E27               	movwf	?___fttol,c
  1500  007E96  0E00               	movlw	0
  1501  007E98  6E28               	movwf	?___fttol+1,c
  1502  007E9A  0E00               	movlw	0
  1503  007E9C  6E29               	movwf	?___fttol+2,c
  1504  007E9E  0E00               	movlw	0
  1505  007EA0  6E2A               	movwf	?___fttol+3,c
  1506  007EA2  0012               	return	
  1507  007EA4                     l389:
  1508  007EA4  90D8               	bcf	status,0,c
  1509  007EA6  3234               	rrcf	___fttol@lval+3,f,c
  1510  007EA8  3233               	rrcf	___fttol@lval+2,f,c
  1511  007EAA  3232               	rrcf	___fttol@lval+1,f,c
  1512  007EAC  3231               	rrcf	___fttol@lval,f,c
  1513  007EAE  3E35               	incfsz	___fttol@exp1,f,c
  1514  007EB0  D7F9               	goto	l389
  1515  007EB2  D015               	goto	u930
  1516  007EB4                     l388:
  1517  007EB4  0E17               	movlw	23
  1518  007EB6  6435               	cpfsgt	___fttol@exp1,c
  1519  007EB8  D00F               	goto	l394
  1520  007EBA  0E00               	movlw	0
  1521  007EBC  6E27               	movwf	?___fttol,c
  1522  007EBE  0E00               	movlw	0
  1523  007EC0  6E28               	movwf	?___fttol+1,c
  1524  007EC2  0E00               	movlw	0
  1525  007EC4  6E29               	movwf	?___fttol+2,c
  1526  007EC6  0E00               	movlw	0
  1527  007EC8  6E2A               	movwf	?___fttol+3,c
  1528  007ECA  0012               	return	
  1529  007ECC  90D8               	bcf	status,0,c
  1530  007ECE  3631               	rlcf	___fttol@lval,f,c
  1531  007ED0  3632               	rlcf	___fttol@lval+1,f,c
  1532  007ED2  3633               	rlcf	___fttol@lval+2,f,c
  1533  007ED4  3634               	rlcf	___fttol@lval+3,f,c
  1534  007ED6  0635               	decf	___fttol@exp1,f,c
  1535  007ED8                     l394:
  1536  007ED8  5035               	movf	___fttol@exp1,w,c
  1537  007EDA  A4D8               	btfss	status,2,c
  1538  007EDC  D7F7               	goto	l395
  1539  007EDE                     u930:
  1540  007EDE  5030               	movf	___fttol@sign1,w,c
  1541  007EE0  B4D8               	btfsc	status,2,c
  1542  007EE2  D008               	goto	l397
  1543  007EE4  1E34               	comf	___fttol@lval+3,f,c
  1544  007EE6  1E33               	comf	___fttol@lval+2,f,c
  1545  007EE8  1E32               	comf	___fttol@lval+1,f,c
  1546  007EEA  6C31               	negf	___fttol@lval,c
  1547  007EEC  0E00               	movlw	0
  1548  007EEE  2232               	addwfc	___fttol@lval+1,f,c
  1549  007EF0  2233               	addwfc	___fttol@lval+2,f,c
  1550  007EF2  2234               	addwfc	___fttol@lval+3,f,c
  1551  007EF4                     l397:
  1552  007EF4  C031  F027         	movff	___fttol@lval,?___fttol
  1553  007EF8  C032  F028         	movff	___fttol@lval+1,?___fttol+1
  1554  007EFC  C033  F029         	movff	___fttol@lval+2,?___fttol+2
  1555  007F00  C034  F02A         	movff	___fttol@lval+3,?___fttol+3
  1556  007F04  0012               	return	
  1557  007F06                     __end_of___fttol:
  1558                           	opt stack 0
  1559                           wreg	equ	0xFE8
  1560                           status	equ	0xFD8
  1561                           
  1562 ;; *************** function ___ftmul *****************
  1563 ;; Defined at:
  1564 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  f1              3   23[COMRAM] float 
  1567 ;;  f2              3   26[COMRAM] float 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  f3_as_produc    3   33[COMRAM] unsigned um
  1570 ;;  sign            1   37[COMRAM] unsigned char 
  1571 ;;  cntr            1   36[COMRAM] unsigned char 
  1572 ;;  exp             1   32[COMRAM] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  3   23[COMRAM] float 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1582 ;;      Params:         6       0       0       0       0       0       0
  1583 ;;      Locals:         6       0       0       0       0       0       0
  1584 ;;      Temps:          3       0       0       0       0       0       0
  1585 ;;      Totals:        15       0       0       0       0       0       0
  1586 ;;Total ram usage:       15 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    1
  1589 ;; This function calls:
  1590 ;;		___ftpack
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text12
  1597  007D1E                     __ptext12:
  1598                           	opt stack 0
  1599  007D1E                     ___ftmul:
  1600                           	opt stack 29
  1601                           
  1602                           ;incstack = 0
  1603  007D1E  C01A  F01E         	movff	___ftmul@f1+2,??___ftmul
  1604  007D22  6A1F               	clrf	(??___ftmul+1)& (0+255),c
  1605  007D24  6A20               	clrf	(??___ftmul+2)& (0+255),c
  1606  007D26  3419               	rlcf	___ftmul@f1+1,w,c
  1607  007D28  361E               	rlcf	??___ftmul& (0+255),f,c
  1608  007D2A  E301               	bnc	u801
  1609  007D2C  801F               	bsf	(??___ftmul+1)& (0+255),0,c
  1610  007D2E                     u801:
  1611  007D2E  501E               	movf	??___ftmul,w,c
  1612  007D30  6E21               	movwf	___ftmul@exp,c
  1613  007D32  5021               	movf	___ftmul@exp,w,c
  1614  007D34  A4D8               	btfss	status,2,c
  1615  007D36  D007               	goto	l365
  1616  007D38  0E00               	movlw	0
  1617  007D3A  6E18               	movwf	?___ftmul,c
  1618  007D3C  0E00               	movlw	0
  1619  007D3E  6E19               	movwf	?___ftmul+1,c
  1620  007D40  0E00               	movlw	0
  1621  007D42  6E1A               	movwf	?___ftmul+2,c
  1622  007D44  0012               	return	
  1623  007D46                     l365:
  1624  007D46  C01D  F01E         	movff	___ftmul@f2+2,??___ftmul
  1625  007D4A  6A1F               	clrf	(??___ftmul+1)& (0+255),c
  1626  007D4C  6A20               	clrf	(??___ftmul+2)& (0+255),c
  1627  007D4E  341C               	rlcf	___ftmul@f2+1,w,c
  1628  007D50  361E               	rlcf	??___ftmul& (0+255),f,c
  1629  007D52  E301               	bnc	u821
  1630  007D54  801F               	bsf	(??___ftmul+1)& (0+255),0,c
  1631  007D56                     u821:
  1632  007D56  501E               	movf	??___ftmul,w,c
  1633  007D58  6E26               	movwf	___ftmul@sign,c
  1634  007D5A  5026               	movf	___ftmul@sign,w,c
  1635  007D5C  A4D8               	btfss	status,2,c
  1636  007D5E  D007               	goto	l367
  1637  007D60  0E00               	movlw	0
  1638  007D62  6E18               	movwf	?___ftmul,c
  1639  007D64  0E00               	movlw	0
  1640  007D66  6E19               	movwf	?___ftmul+1,c
  1641  007D68  0E00               	movlw	0
  1642  007D6A  6E1A               	movwf	?___ftmul+2,c
  1643  007D6C  0012               	return	
  1644  007D6E                     l367:
  1645  007D6E  5026               	movf	___ftmul@sign,w,c
  1646  007D70  0F7B               	addlw	123
  1647  007D72  2621               	addwf	___ftmul@exp,f,c
  1648  007D74  C01A  F026         	movff	___ftmul@f1+2,___ftmul@sign
  1649  007D78  501D               	movf	___ftmul@f2+2,w,c
  1650  007D7A  1A26               	xorwf	___ftmul@sign,f,c
  1651  007D7C  0E80               	movlw	128
  1652  007D7E  1626               	andwf	___ftmul@sign,f,c
  1653  007D80  8E19               	bsf	___ftmul@f1+1,7,c
  1654  007D82  8E1C               	bsf	___ftmul@f2+1,7,c
  1655  007D84  0EFF               	movlw	255
  1656  007D86  161B               	andwf	___ftmul@f2,f,c
  1657  007D88  0EFF               	movlw	255
  1658  007D8A  161C               	andwf	___ftmul@f2+1,f,c
  1659  007D8C  0E00               	movlw	0
  1660  007D8E  161D               	andwf	___ftmul@f2+2,f,c
  1661  007D90  0E00               	movlw	0
  1662  007D92  6E22               	movwf	___ftmul@f3_as_product,c
  1663  007D94  0E00               	movlw	0
  1664  007D96  6E23               	movwf	___ftmul@f3_as_product+1,c
  1665  007D98  0E00               	movlw	0
  1666  007D9A  6E24               	movwf	___ftmul@f3_as_product+2,c
  1667  007D9C  0E07               	movlw	7
  1668  007D9E  6E25               	movwf	___ftmul@cntr,c
  1669  007DA0  A018               	btfss	___ftmul@f1,0,c
  1670  007DA2  D006               	goto	l369
  1671  007DA4  501B               	movf	___ftmul@f2,w,c
  1672  007DA6  2622               	addwf	___ftmul@f3_as_product,f,c
  1673  007DA8  501C               	movf	___ftmul@f2+1,w,c
  1674  007DAA  2223               	addwfc	___ftmul@f3_as_product+1,f,c
  1675  007DAC  501D               	movf	___ftmul@f2+2,w,c
  1676  007DAE  2224               	addwfc	___ftmul@f3_as_product+2,f,c
  1677  007DB0                     l369:
  1678  007DB0  90D8               	bcf	status,0,c
  1679  007DB2  321A               	rrcf	___ftmul@f1+2,f,c
  1680  007DB4  3219               	rrcf	___ftmul@f1+1,f,c
  1681  007DB6  3218               	rrcf	___ftmul@f1,f,c
  1682  007DB8  90D8               	bcf	status,0,c
  1683  007DBA  361B               	rlcf	___ftmul@f2,f,c
  1684  007DBC  361C               	rlcf	___ftmul@f2+1,f,c
  1685  007DBE  361D               	rlcf	___ftmul@f2+2,f,c
  1686  007DC0  2E25               	decfsz	___ftmul@cntr,f,c
  1687  007DC2  D7EE               	goto	l368
  1688  007DC4  0E09               	movlw	9
  1689  007DC6  6E25               	movwf	___ftmul@cntr,c
  1690  007DC8  A018               	btfss	___ftmul@f1,0,c
  1691  007DCA  D006               	goto	l372
  1692  007DCC  501B               	movf	___ftmul@f2,w,c
  1693  007DCE  2622               	addwf	___ftmul@f3_as_product,f,c
  1694  007DD0  501C               	movf	___ftmul@f2+1,w,c
  1695  007DD2  2223               	addwfc	___ftmul@f3_as_product+1,f,c
  1696  007DD4  501D               	movf	___ftmul@f2+2,w,c
  1697  007DD6  2224               	addwfc	___ftmul@f3_as_product+2,f,c
  1698  007DD8                     l372:
  1699  007DD8  90D8               	bcf	status,0,c
  1700  007DDA  321A               	rrcf	___ftmul@f1+2,f,c
  1701  007DDC  3219               	rrcf	___ftmul@f1+1,f,c
  1702  007DDE  3218               	rrcf	___ftmul@f1,f,c
  1703  007DE0  90D8               	bcf	status,0,c
  1704  007DE2  3224               	rrcf	___ftmul@f3_as_product+2,f,c
  1705  007DE4  3223               	rrcf	___ftmul@f3_as_product+1,f,c
  1706  007DE6  3222               	rrcf	___ftmul@f3_as_product,f,c
  1707  007DE8  2E25               	decfsz	___ftmul@cntr,f,c
  1708  007DEA  D7EE               	goto	l371
  1709  007DEC  C022  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1710  007DF0  C023  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1711  007DF4  C024  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1712  007DF8  C021  F004         	movff	___ftmul@exp,___ftpack@exp
  1713  007DFC  C026  F005         	movff	___ftmul@sign,___ftpack@sign
  1714  007E00  EC60  F03D         	call	___ftpack	;wreg free
  1715  007E04  C001  F018         	movff	?___ftpack,?___ftmul
  1716  007E08  C002  F019         	movff	?___ftpack+1,?___ftmul+1
  1717  007E0C  C003  F01A         	movff	?___ftpack+2,?___ftmul+2
  1718  007E10  0012               	return	
  1719  007E12                     __end_of___ftmul:
  1720                           	opt stack 0
  1721                           wreg	equ	0xFE8
  1722                           status	equ	0xFD8
  1723                           
  1724 ;; *************** function ___ftdiv *****************
  1725 ;; Defined at:
  1726 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  f1              3    8[COMRAM] float 
  1729 ;;  f2              3   11[COMRAM] float 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  f3              3   18[COMRAM] float 
  1732 ;;  sign            1   22[COMRAM] unsigned char 
  1733 ;;  exp             1   21[COMRAM] unsigned char 
  1734 ;;  cntr            1   17[COMRAM] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  3    8[COMRAM] float 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1744 ;;      Params:         6       0       0       0       0       0       0
  1745 ;;      Locals:         6       0       0       0       0       0       0
  1746 ;;      Temps:          3       0       0       0       0       0       0
  1747 ;;      Totals:        15       0       0       0       0       0       0
  1748 ;;Total ram usage:       15 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    1
  1751 ;; This function calls:
  1752 ;;		___ftpack
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text13
  1759  007C38                     __ptext13:
  1760                           	opt stack 0
  1761  007C38                     ___ftdiv:
  1762                           	opt stack 29
  1763                           
  1764                           ;incstack = 0
  1765  007C38  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  1766  007C3C  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  1767  007C3E  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  1768  007C40  340A               	rlcf	___ftdiv@f1+1,w,c
  1769  007C42  360F               	rlcf	??___ftdiv& (0+255),f,c
  1770  007C44  E301               	bnc	u751
  1771  007C46  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  1772  007C48                     u751:
  1773  007C48  500F               	movf	??___ftdiv,w,c
  1774  007C4A  6E16               	movwf	___ftdiv@exp,c
  1775  007C4C  5016               	movf	___ftdiv@exp,w,c
  1776  007C4E  A4D8               	btfss	status,2,c
  1777  007C50  D007               	goto	l350
  1778  007C52  0E00               	movlw	0
  1779  007C54  6E09               	movwf	?___ftdiv,c
  1780  007C56  0E00               	movlw	0
  1781  007C58  6E0A               	movwf	?___ftdiv+1,c
  1782  007C5A  0E00               	movlw	0
  1783  007C5C  6E0B               	movwf	?___ftdiv+2,c
  1784  007C5E  0012               	return	
  1785  007C60                     l350:
  1786  007C60  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  1787  007C64  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  1788  007C66  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  1789  007C68  340D               	rlcf	___ftdiv@f2+1,w,c
  1790  007C6A  360F               	rlcf	??___ftdiv& (0+255),f,c
  1791  007C6C  E301               	bnc	u771
  1792  007C6E  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  1793  007C70                     u771:
  1794  007C70  500F               	movf	??___ftdiv,w,c
  1795  007C72  6E17               	movwf	___ftdiv@sign,c
  1796  007C74  5017               	movf	___ftdiv@sign,w,c
  1797  007C76  A4D8               	btfss	status,2,c
  1798  007C78  D007               	goto	l352
  1799  007C7A  0E00               	movlw	0
  1800  007C7C  6E09               	movwf	?___ftdiv,c
  1801  007C7E  0E00               	movlw	0
  1802  007C80  6E0A               	movwf	?___ftdiv+1,c
  1803  007C82  0E00               	movlw	0
  1804  007C84  6E0B               	movwf	?___ftdiv+2,c
  1805  007C86  0012               	return	
  1806  007C88                     l352:
  1807  007C88  0E00               	movlw	0
  1808  007C8A  6E13               	movwf	___ftdiv@f3,c
  1809  007C8C  0E00               	movlw	0
  1810  007C8E  6E14               	movwf	___ftdiv@f3+1,c
  1811  007C90  0E00               	movlw	0
  1812  007C92  6E15               	movwf	___ftdiv@f3+2,c
  1813  007C94  5017               	movf	___ftdiv@sign,w,c
  1814  007C96  0F89               	addlw	137
  1815  007C98  5E16               	subwf	___ftdiv@exp,f,c
  1816  007C9A  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  1817  007C9E  500E               	movf	___ftdiv@f2+2,w,c
  1818  007CA0  1A17               	xorwf	___ftdiv@sign,f,c
  1819  007CA2  0E80               	movlw	128
  1820  007CA4  1617               	andwf	___ftdiv@sign,f,c
  1821  007CA6  8E0A               	bsf	___ftdiv@f1+1,7,c
  1822  007CA8  0EFF               	movlw	255
  1823  007CAA  1609               	andwf	___ftdiv@f1,f,c
  1824  007CAC  0EFF               	movlw	255
  1825  007CAE  160A               	andwf	___ftdiv@f1+1,f,c
  1826  007CB0  0E00               	movlw	0
  1827  007CB2  160B               	andwf	___ftdiv@f1+2,f,c
  1828  007CB4  8E0D               	bsf	___ftdiv@f2+1,7,c
  1829  007CB6  0EFF               	movlw	255
  1830  007CB8  160C               	andwf	___ftdiv@f2,f,c
  1831  007CBA  0EFF               	movlw	255
  1832  007CBC  160D               	andwf	___ftdiv@f2+1,f,c
  1833  007CBE  0E00               	movlw	0
  1834  007CC0  160E               	andwf	___ftdiv@f2+2,f,c
  1835  007CC2  0E18               	movlw	24
  1836  007CC4  6E12               	movwf	___ftdiv@cntr,c
  1837  007CC6  90D8               	bcf	status,0,c
  1838  007CC8  3613               	rlcf	___ftdiv@f3,f,c
  1839  007CCA  3614               	rlcf	___ftdiv@f3+1,f,c
  1840  007CCC  3615               	rlcf	___ftdiv@f3+2,f,c
  1841  007CCE  500C               	movf	___ftdiv@f2,w,c
  1842  007CD0  5C09               	subwf	___ftdiv@f1,w,c
  1843  007CD2  500D               	movf	___ftdiv@f2+1,w,c
  1844  007CD4  580A               	subwfb	___ftdiv@f1+1,w,c
  1845  007CD6  500E               	movf	___ftdiv@f2+2,w,c
  1846  007CD8  580B               	subwfb	___ftdiv@f1+2,w,c
  1847  007CDA  A0D8               	btfss	status,0,c
  1848  007CDC  D007               	goto	l354
  1849  007CDE  500C               	movf	___ftdiv@f2,w,c
  1850  007CE0  5E09               	subwf	___ftdiv@f1,f,c
  1851  007CE2  500D               	movf	___ftdiv@f2+1,w,c
  1852  007CE4  5A0A               	subwfb	___ftdiv@f1+1,f,c
  1853  007CE6  500E               	movf	___ftdiv@f2+2,w,c
  1854  007CE8  5A0B               	subwfb	___ftdiv@f1+2,f,c
  1855  007CEA  8013               	bsf	___ftdiv@f3,0,c
  1856  007CEC                     l354:
  1857  007CEC  90D8               	bcf	status,0,c
  1858  007CEE  3609               	rlcf	___ftdiv@f1,f,c
  1859  007CF0  360A               	rlcf	___ftdiv@f1+1,f,c
  1860  007CF2  360B               	rlcf	___ftdiv@f1+2,f,c
  1861  007CF4  2E12               	decfsz	___ftdiv@cntr,f,c
  1862  007CF6  D7E7               	goto	l353
  1863  007CF8  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  1864  007CFC  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1865  007D00  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1866  007D04  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  1867  007D08  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  1868  007D0C  EC60  F03D         	call	___ftpack	;wreg free
  1869  007D10  C001  F009         	movff	?___ftpack,?___ftdiv
  1870  007D14  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  1871  007D18  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  1872  007D1C  0012               	return	
  1873  007D1E                     __end_of___ftdiv:
  1874                           	opt stack 0
  1875                           wreg	equ	0xFE8
  1876                           status	equ	0xFD8
  1877                           
  1878 ;; *************** function ___awtoft *****************
  1879 ;; Defined at:
  1880 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  c               2    8[COMRAM] int 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  sign            1   11[COMRAM] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  3    8[COMRAM] float 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1894 ;;      Params:         3       0       0       0       0       0       0
  1895 ;;      Locals:         1       0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0
  1897 ;;      Totals:         4       0       0       0       0       0       0
  1898 ;;Total ram usage:        4 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    1
  1901 ;; This function calls:
  1902 ;;		___ftpack
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text14
  1909  007870                     __ptext14:
  1910                           	opt stack 0
  1911  007870                     ___awtoft:
  1912                           	opt stack 29
  1913                           
  1914                           ;incstack = 0
  1915  007870  0E00               	movlw	0
  1916  007872  6E0C               	movwf	___awtoft@sign,c
  1917  007874  AE0A               	btfss	___awtoft@c+1,7,c
  1918  007876  D006               	goto	l267
  1919  007878  6C09               	negf	___awtoft@c,c
  1920  00787A  1E0A               	comf	___awtoft@c+1,f,c
  1921  00787C  B0D8               	btfsc	status,0,c
  1922  00787E  2A0A               	incf	___awtoft@c+1,f,c
  1923  007880  0E01               	movlw	1
  1924  007882  6E0C               	movwf	___awtoft@sign,c
  1925  007884                     l267:
  1926  007884  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1927  007888  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1928  00788C  6A03               	clrf	___ftpack@arg+2,c
  1929  00788E  0E8E               	movlw	142
  1930  007890  6E04               	movwf	___ftpack@exp,c
  1931  007892  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1932  007896  EC60  F03D         	call	___ftpack	;wreg free
  1933  00789A  C001  F009         	movff	?___ftpack,?___awtoft
  1934  00789E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1935  0078A2  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1936  0078A6  0012               	return	
  1937  0078A8                     __end_of___awtoft:
  1938                           	opt stack 0
  1939                           wreg	equ	0xFE8
  1940                           status	equ	0xFD8
  1941                           
  1942 ;; *************** function ___ftpack *****************
  1943 ;; Defined at:
  1944 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  arg             3    0[COMRAM] unsigned um
  1947 ;;  exp             1    3[COMRAM] unsigned char 
  1948 ;;  sign            1    4[COMRAM] unsigned char 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  3    0[COMRAM] float 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1960 ;;      Params:         5       0       0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0
  1962 ;;      Temps:          3       0       0       0       0       0       0
  1963 ;;      Totals:         8       0       0       0       0       0       0
  1964 ;;Total ram usage:        8 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		___awtoft
  1970 ;;		___ftdiv
  1971 ;;		___ftmul
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text15
  1976  007AC0                     __ptext15:
  1977                           	opt stack 0
  1978  007AC0                     ___ftpack:
  1979                           	opt stack 29
  1980                           
  1981                           ;incstack = 0
  1982  007AC0  5004               	movf	___ftpack@exp,w,c
  1983  007AC2  B4D8               	btfsc	status,2,c
  1984  007AC4  D005               	goto	u490
  1985  007AC6  5001               	movf	___ftpack@arg,w,c
  1986  007AC8  1002               	iorwf	___ftpack@arg+1,w,c
  1987  007ACA  1003               	iorwf	___ftpack@arg+2,w,c
  1988  007ACC  A4D8               	btfss	status,2,c
  1989  007ACE  D00C               	goto	l286
  1990  007AD0                     u490:
  1991  007AD0  0E00               	movlw	0
  1992  007AD2  6E01               	movwf	?___ftpack,c
  1993  007AD4  0E00               	movlw	0
  1994  007AD6  6E02               	movwf	?___ftpack+1,c
  1995  007AD8  0E00               	movlw	0
  1996  007ADA  6E03               	movwf	?___ftpack+2,c
  1997  007ADC  0012               	return	
  1998  007ADE  2A04               	incf	___ftpack@exp,f,c
  1999  007AE0  90D8               	bcf	status,0,c
  2000  007AE2  3203               	rrcf	___ftpack@arg+2,f,c
  2001  007AE4  3202               	rrcf	___ftpack@arg+1,f,c
  2002  007AE6  3201               	rrcf	___ftpack@arg,f,c
  2003  007AE8                     l286:
  2004  007AE8  0E00               	movlw	0
  2005  007AEA  1401               	andwf	___ftpack@arg,w,c
  2006  007AEC  6E06               	movwf	??___ftpack& (0+255),c
  2007  007AEE  0E00               	movlw	0
  2008  007AF0  1402               	andwf	___ftpack@arg+1,w,c
  2009  007AF2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2010  007AF4  0EFE               	movlw	254
  2011  007AF6  1403               	andwf	___ftpack@arg+2,w,c
  2012  007AF8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2013  007AFA  5006               	movf	??___ftpack,w,c
  2014  007AFC  1007               	iorwf	??___ftpack+1,w,c
  2015  007AFE  1008               	iorwf	??___ftpack+2,w,c
  2016  007B00  B4D8               	btfsc	status,2,c
  2017  007B02  D00C               	goto	l289
  2018  007B04  D7EC               	goto	l287
  2019  007B06  2A04               	incf	___ftpack@exp,f,c
  2020  007B08  0E01               	movlw	1
  2021  007B0A  2601               	addwf	___ftpack@arg,f,c
  2022  007B0C  0E00               	movlw	0
  2023  007B0E  2202               	addwfc	___ftpack@arg+1,f,c
  2024  007B10  0E00               	movlw	0
  2025  007B12  2203               	addwfc	___ftpack@arg+2,f,c
  2026  007B14  90D8               	bcf	status,0,c
  2027  007B16  3203               	rrcf	___ftpack@arg+2,f,c
  2028  007B18  3202               	rrcf	___ftpack@arg+1,f,c
  2029  007B1A  3201               	rrcf	___ftpack@arg,f,c
  2030  007B1C                     l289:
  2031  007B1C  0E00               	movlw	0
  2032  007B1E  1401               	andwf	___ftpack@arg,w,c
  2033  007B20  6E06               	movwf	??___ftpack& (0+255),c
  2034  007B22  0E00               	movlw	0
  2035  007B24  1402               	andwf	___ftpack@arg+1,w,c
  2036  007B26  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2037  007B28  0EFF               	movlw	255
  2038  007B2A  1403               	andwf	___ftpack@arg+2,w,c
  2039  007B2C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2040  007B2E  5006               	movf	??___ftpack,w,c
  2041  007B30  1007               	iorwf	??___ftpack+1,w,c
  2042  007B32  1008               	iorwf	??___ftpack+2,w,c
  2043  007B34  B4D8               	btfsc	status,2,c
  2044  007B36  D006               	goto	l292
  2045  007B38  D7E6               	goto	l290
  2046  007B3A  0604               	decf	___ftpack@exp,f,c
  2047  007B3C  90D8               	bcf	status,0,c
  2048  007B3E  3601               	rlcf	___ftpack@arg,f,c
  2049  007B40  3602               	rlcf	___ftpack@arg+1,f,c
  2050  007B42  3603               	rlcf	___ftpack@arg+2,f,c
  2051  007B44                     l292:
  2052  007B44  BE02               	btfsc	___ftpack@arg+1,7,c
  2053  007B46  D003               	goto	u530
  2054  007B48  0E02               	movlw	2
  2055  007B4A  6004               	cpfslt	___ftpack@exp,c
  2056  007B4C  D7F6               	goto	l293
  2057  007B4E                     u530:
  2058  007B4E  A004               	btfss	___ftpack@exp,0,c
  2059  007B50  9E02               	bcf	___ftpack@arg+1,7,c
  2060  007B52  90D8               	bcf	status,0,c
  2061  007B54  3204               	rrcf	___ftpack@exp,f,c
  2062  007B56  5004               	movf	___ftpack@exp,w,c
  2063  007B58  1203               	iorwf	___ftpack@arg+2,f,c
  2064  007B5A  5005               	movf	___ftpack@sign,w,c
  2065  007B5C  A4D8               	btfss	status,2,c
  2066  007B5E  8E03               	bsf	___ftpack@arg+2,7,c
  2067  007B60  C001  F001         	movff	___ftpack@arg,?___ftpack
  2068  007B64  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2069  007B68  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2070  007B6C  0012               	return	
  2071  007B6E                     __end_of___ftpack:
  2072                           	opt stack 0
  2073  0000                     wreg	equ	0xFE8
  2074                           status	equ	0xFD8
  2075                           wreg	equ	0xFE8
  2076                           status	equ	0xFD8
  2077                           
  2078                           	psect	rparam
  2079  0000                     wreg	equ	0xFE8
  2080                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     70      70
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_conv
    _dec->___awdiv
    _conv->___fttol
    _data->_pulse
    _command->_pulse
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   13937
                                             65 COMRAM     5     5      0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            _command
                               _conv
                                _dec
                           _getvalue
 ---------------------------------------------------------------------------------
 (1) _getvalue                                             6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _dec                                                 10     8      2    2686
                                              8 COMRAM    10     8      2
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                               _data
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _conv                                                12    10      2    2129
                                             53 COMRAM    12    10      2
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 1     1      0      15
                                              1 COMRAM     1     1      0
                              _pulse
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _command                                              1     1      0      15
                                              1 COMRAM     1     1      0
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _pulse                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     404
                                             38 COMRAM    15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3031
                                             23 COMRAM    15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2985
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2594
                                              8 COMRAM     4     1      3
                           ___ftpack
                           _getvalue (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2427
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
     _getvalue (ARG)
   ___ftdiv
     ___ftpack
   ___ftmul
     ___ftdiv (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___ftdiv (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
   _command
     _pulse
   _conv
     ___awdiv
     ___awmod
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
     _data (ARG)
       _pulse
   _dec
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
     _data
       _pulse
   _getvalue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     46      46       1       55.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 26 03:00:04 2019

                     l54 782A                       l47 7F5E                       _GO 007E11  
           ___awdiv@sign 0006                      l240 79D0                      l242 79EE  
                    l243 79E6                      l260 7994                      l252 7950  
                    l261 79A2                      l253 795C                      l350 7C60  
                    l246 7A0E                      l247 7A18                      l239 79C0  
                    l255 7972                      l352 7C88                      l248 7A26  
                    l256 796A                      l353 7CC6                      l290 7B06  
                    l354 7CEC                      l267 7884                      l371 7DC8  
                    l259 798A                      l292 7B44                      l372 7DD8  
                    l293 7B3A                      l365 7D46                      l286 7AE8  
                    l287 7ADE                      l367 7D6E                      l368 7DA0  
                    l480 7932                      l289 7B1C                      l369 7DB0  
                    l394 7ED8                      l386 7E3E                      l490 78E0  
                    l395 7ECC                      l475 7908                      l388 7EB4  
                    l476 7900                      l397 7EF4                      l389 7EA4  
                    l485 78BE                      l486 78B6                      l479 7928  
                    l489 78D6                      u530 7B4E                      u720 78C2  
                    u801 7D2E                      u490 7AD0                      u650 7976  
                    u821 7D56                      u590 79F2                      u751 7C48  
                    u930 7EDE                      u690 790C                      u771 7C70  
                    u871 7E22                      u890 7E5C                      u957 7852  
                    u895 7E54                      u967 7864                      _dec 7A30  
           ___awmod@sign 0006                      wreg 000FE8             ___ftdiv@cntr 0012  
           ___ftdiv@sign 0017                     ?_dec 0009                     _LATD 000F8C  
                   _data 781A                     dec@n 0009                     _conv 7B6E  
                   _main 7F06             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   start 0000             ___ftmul@cntr 0025             ___param_bank 000000  
           ___ftmul@sign 0026             ___fttol@exp1 0035                    ??_dec 000B  
           ___fttol@lval 0031                    ?_data 0001                    ?_conv 0036  
                  ?_main 0001          __end_of___awdiv 7A30          __end_of___awmod 79AC  
        __end_of___ftdiv 7D1E                    _CMCON 000FB4          __end_of___ftmul 7E12  
        ___awdiv@divisor 0003          __end_of___fttol 7F06          __end_of___lwdiv 793C  
        __end_of___lwmod 78EA          ___awdiv@counter 0005                    _PORTA 000F80  
                  _PORTC 000F82                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
        __end_of_command 781A                    dec@x1 000D                    dec@x2 000F  
          ___awtoft@sign 000C            ___ftpack@sign 0005                    _pulse 784A  
                  conv@n 0036                    main@x 0044                    main@y 0042  
                  status 000FD8          __initialization 7806             __end_of_data 7828  
           __end_of_conv 7C38             __end_of_main 8000                   ??_data 0002  
                 ??_conv 0038                   ??_main 0042            ___fttol@sign1 0030  
          __activetblptr 000000                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001         __end_of___awtoft 78A8                   ?_pulse 0001  
       __end_of___ftpack 7B6E                ??___awdiv 0005         __end_of_getvalue 784A  
              ??___awmod 0005                ??___ftdiv 000F                   dec@one 000B  
              ??___ftmul 001E                ??___fttol 002B                ??___lwdiv 0005  
              ??___lwmod 0005         ___awdiv@quotient 0007          ___awmod@divisor 0003  
        ___awmod@counter 0005                ??_command 0002    ___ftmul@f3_as_product 0022  
             __accesstop 0080  __end_of__initialization 7806            ___rparam_used 000001  
             ___ftdiv@f1 0009               ___ftdiv@f2 000C               ___ftdiv@f3 0013  
             ___awtoft@c 0009               ___ftmul@f1 0018               ___ftmul@f2 001B  
             ___fttol@f1 0027           __pcstackCOMRAM 0001            __end_of_pulse 7870  
                ??_pulse 0001                ?___awtoft 0009                ?___ftpack 0001  
              ?_getvalue 0001                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 79AC                  ___awmod 793C                  ___ftdiv 7C38  
                ___ftmul 7D1E                  ___fttol 7E12                  ___lwdiv 78EA  
                ___lwmod 78A8                  __pcinit 7806               ??___awtoft 000C  
             ??___ftpack 0006                  __ramtop 0600                  dec@temp 0011  
                __ptext0 7F06                  __ptext1 7828                  __ptext2 7A30  
                __ptext3 78A8                  __ptext4 78EA                  __ptext5 7B6E  
                __ptext6 781A                  __ptext7 793C                  __ptext8 79AC  
                __ptext9 780C                  _command 780C             __size_of_dec 0090  
       ___awmod@dividend 0001                  conv@hun 003A                  conv@one 003E  
                conv@ten 003C     end_of_initialization 7806               ??_getvalue 0003  
             command@cmd 0002              ___ftdiv@exp 0016              ___ftmul@exp 0021  
    start_initialization 7806              __end_of_dec 7AC0        __size_of___awtoft 0038  
      __size_of___ftpack 00AE        __size_of_getvalue 0022         ___lwdiv@dividend 0001  
               ?___awdiv 0001                 ?___awmod 0001                 ?___ftdiv 0009  
               ?___ftmul 0018                 ?___fttol 0027                 ?___lwdiv 0001  
               ?___lwmod 0001                 ?_command 0001         ___lwdiv@quotient 0005  
         __size_of_pulse 0026                 _LATCbits 000F8B                getvalue@x 0005  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 0084  
       __size_of___awmod 0070         __size_of___ftdiv 00E6         __size_of___ftmul 00F4  
       __size_of___fttol 00F4         __size_of___lwdiv 0052         __size_of___lwmod 0042  
               ___awtoft 7870                 ___ftpack 7AC0         __size_of_command 000E  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007                 __ptext10 784A  
               __ptext11 7E12                 __ptext12 7D1E                 __ptext13 7C38  
               __ptext14 7870                 __ptext15 7AC0                 data@data 0002  
               _getvalue 7828            __size_of_data 000E            __size_of_conv 00CA  
          __size_of_main 00FA                 conv@temp 0040                 conv@thou 0038  
       ___lwmod@dividend 0001          ___lwmod@divisor 0003          ___lwmod@counter 0005  
