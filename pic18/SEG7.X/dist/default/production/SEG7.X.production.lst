

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 11 05:20:49 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4520 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	idataCOMRAM
    49  007F56                     __pidataCOMRAM:
    50                           	opt stack 0
    51                           
    52                           ;initializer for main@F3007
    53  007F56  003F               	dw	63
    54  007F58  0006               	dw	6
    55  007F5A  005B               	dw	91
    56  007F5C  004F               	dw	79
    57  007F5E  0066               	dw	102
    58  007F60  006D               	dw	109
    59  007F62  007D               	dw	125
    60  007F64  0007               	dw	7
    61  007F66  007F               	dw	127
    62  007F68  006F               	dw	111
    63  0000                     _PORTBbits	set	3969
    64  0000                     _LATC	set	3979
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISC	set	3988
    67  0000                     _PORTC	set	3970
    68  0000                     _PORTB	set	3969
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73  007F6A                     __pcinit:
    74                           	opt stack 0
    75  007F6A                     start_initialization:
    76                           	opt stack 0
    77  007F6A                     __initialization:
    78                           	opt stack 0
    79                           
    80                           ; Initialize objects allocated to COMRAM (20 bytes)
    81                           ; load TBLPTR registers with __pidataCOMRAM
    82  007F6A  0E56               	movlw	low __pidataCOMRAM
    83  007F6C  6EF6               	movwf	tblptrl,c
    84  007F6E  0E7F               	movlw	high __pidataCOMRAM
    85  007F70  6EF7               	movwf	tblptrh,c
    86  007F72  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    87  007F74  6EF8               	movwf	tblptru,c
    88  007F76  EE00  F01B         	lfsr	0,__pdataCOMRAM
    89  007F7A  EE10 F014          	lfsr	1,20
    90  007F7E                     copy_data0:
    91  007F7E  0009               	tblrd		*+
    92  007F80  CFF5 FFEE          	movff	tablat,postinc0
    93  007F84  50E5               	movf	postdec1,w,c
    94  007F86  50E1               	movf	fsr1l,w,c
    95  007F88  E1FA               	bnz	copy_data0
    96  007F8A                     end_of_initialization:
    97                           	opt stack 0
    98  007F8A                     __end_of__initialization:
    99                           	opt stack 0
   100  007F8A  0100               	movlb	0
   101  007F8C  EFC8  F03F         	goto	_main	;jump to C main() function
   102                           tblptru	equ	0xFF8
   103                           tblptrh	equ	0xFF7
   104                           tblptrl	equ	0xFF6
   105                           tablat	equ	0xFF5
   106                           postinc0	equ	0xFEE
   107                           postdec1	equ	0xFE5
   108                           fsr1l	equ	0xFE1
   109                           
   110                           	psect	dataCOMRAM
   111  00001B                     __pdataCOMRAM:
   112                           	opt stack 0
   113  00001B                     main@F3007:
   114                           	opt stack 0
   115  00001B                     	ds	20
   116                           tblptru	equ	0xFF8
   117                           tblptrh	equ	0xFF7
   118                           tblptrl	equ	0xFF6
   119                           tablat	equ	0xFF5
   120                           postinc0	equ	0xFEE
   121                           postdec1	equ	0xFE5
   122                           fsr1l	equ	0xFE1
   123                           
   124                           	psect	cstackCOMRAM
   125  000001                     __pcstackCOMRAM:
   126                           	opt stack 0
   127  000001                     ??_main:
   128                           
   129                           ; 1 bytes @ 0x0
   130  000001                     	ds	2
   131  000003                     main@arr:
   132                           	opt stack 0
   133                           
   134                           ; 20 bytes @ 0x2
   135  000003                     	ds	20
   136  000017                     main@j:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x16
   140  000017                     	ds	2
   141  000019                     main@i:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x18
   145  000019                     	ds	2
   146                           tblptru	equ	0xFF8
   147                           tblptrh	equ	0xFF7
   148                           tblptrl	equ	0xFF6
   149                           tablat	equ	0xFF5
   150                           postinc0	equ	0xFEE
   151                           postdec1	equ	0xFE5
   152                           fsr1l	equ	0xFE1
   153                           
   154 ;;
   155 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   156 ;;
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 4 in file "SEG7.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;  arr            20    2[COMRAM] int [10]
   164 ;;  i               2   24[COMRAM] int 
   165 ;;  j               2   22[COMRAM] int 
   166 ;; Return value:  Size  Location     Type
   167 ;;                  1    wreg      void 
   168 ;; Registers used:
   169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   170 ;; Tracked objects:
   171 ;;		On entry : 0/0
   172 ;;		On exit  : 0/0
   173 ;;		Unchanged: 0/0
   174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   175 ;;      Params:         0       0       0       0       0       0       0
   176 ;;      Locals:        24       0       0       0       0       0       0
   177 ;;      Temps:          2       0       0       0       0       0       0
   178 ;;      Totals:        26       0       0       0       0       0       0
   179 ;;Total ram usage:       26 bytes
   180 ;; This function calls:
   181 ;;		Nothing
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  007F90                     __ptext0:
   189                           	opt stack 0
   190  007F90                     _main:
   191                           	opt stack 31
   192                           
   193                           ;SEG7.c: 6: PORTB=0X00;
   194                           
   195                           ;incstack = 0
   196  007F90  0E00               	movlw	0
   197  007F92  6E81               	movwf	3969,c	;volatile
   198                           
   199                           ;SEG7.c: 7: PORTC=0X00;
   200  007F94  0E00               	movlw	0
   201  007F96  6E82               	movwf	3970,c	;volatile
   202                           
   203                           ;SEG7.c: 8: TRISC=0X00;
   204  007F98  0E00               	movlw	0
   205  007F9A  6E94               	movwf	3988,c	;volatile
   206                           
   207                           ;SEG7.c: 9: TRISB=0XFF;
   208  007F9C  6893               	setf	3987,c	;volatile
   209                           
   210                           ;SEG7.c: 10: int i=0,j=0;
   211  007F9E  0E00               	movlw	0
   212  007FA0  6E1A               	movwf	main@i+1,c
   213  007FA2  0E00               	movlw	0
   214  007FA4  6E19               	movwf	main@i,c
   215  007FA6  0E00               	movlw	0
   216  007FA8  6E18               	movwf	main@j+1,c
   217  007FAA  0E00               	movlw	0
   218  007FAC  6E17               	movwf	main@j,c
   219                           
   220                           ;SEG7.c: 12: int arr[]={0X3F,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
   221  007FAE  EE20  F01B         	lfsr	2,main@F3007
   222  007FB2  EE10  F003         	lfsr	1,main@arr
   223  007FB6  0E13               	movlw	19
   224  007FB8                     u41:
   225  007FB8  CFDB FFE3          	movff	plusw2,plusw1
   226  007FBC  06E8               	decf	wreg,f,c
   227  007FBE  E2FC               	bc	u41
   228                           
   229                           ;SEG7.c: 13: LATC=arr[0];
   230  007FC0  C003  FF8B         	movff	main@arr,3979	;volatile
   231                           
   232                           ;SEG7.c: 14: _delay((unsigned long)((1000)*(20000000/4000.0)));
   233  007FC4  0E1A               	movlw	26
   234  007FC6  6E02               	movwf	(??_main+1)& (0+255),c
   235  007FC8  0E5E               	movlw	94
   236  007FCA  6E01               	movwf	??_main& (0+255),c
   237  007FCC  0E6E               	movlw	110
   238  007FCE                     u77:
   239  007FCE  2EE8               	decfsz	wreg,f,c
   240  007FD0  D7FE               	bra	u77
   241  007FD2  2E01               	decfsz	??_main& (0+255),f,c
   242  007FD4  D7FC               	bra	u77
   243  007FD6  2E02               	decfsz	(??_main+1)& (0+255),f,c
   244  007FD8  D7FA               	bra	u77
   245  007FDA  D000               	nop2	
   246  007FDC                     
   247                           ;SEG7.c: 16: {
   248                           ;SEG7.c: 18: if(PORTBbits.RB0==1)
   249  007FDC  A081               	btfss	3969,0,c	;volatile
   250  007FDE  D7FE               	goto	l21
   251  007FE0                     u50:
   252                           
   253                           ;SEG7.c: 19: {
   254                           ;SEG7.c: 20: while(PORTBbits.RB0==1);
   255  007FE0  B081               	btfsc	3969,0,c	;volatile
   256  007FE2  D7FE               	goto	u50
   257                           
   258                           ;SEG7.c: 21: LATC=arr[i];
   259  007FE4  90D8               	bcf	status,0,c
   260  007FE6  3419               	rlcf	main@i,w,c
   261  007FE8  6ED9               	movwf	fsr2l,c
   262  007FEA  341A               	rlcf	main@i+1,w,c
   263  007FEC  6EDA               	movwf	fsr2h,c
   264  007FEE  0E03               	movlw	low main@arr
   265  007FF0  26D9               	addwf	fsr2l,f,c
   266  007FF2  0E00               	movlw	high main@arr
   267  007FF4  22DA               	addwfc	fsr2h,f,c
   268  007FF6  50DF               	movf	indf2,w,c
   269  007FF8  6E8B               	movwf	3979,c	;volatile
   270                           
   271                           ;SEG7.c: 22: i++;
   272  007FFA  4A19               	infsnz	main@i,f,c
   273  007FFC  2A1A               	incf	main@i+1,f,c
   274  007FFE  D7EE               	goto	l21
   275  008000                     __end_of_main:
   276                           	opt stack 0
   277  0000                     tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           postdec1	equ	0xFE5
   284                           plusw1	equ	0xFE3
   285                           fsr1l	equ	0xFE1
   286                           indf2	equ	0xFDF
   287                           plusw2	equ	0xFDB
   288                           fsr2h	equ	0xFDA
   289                           fsr2l	equ	0xFD9
   290                           status	equ	0xFD8
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           plusw1	equ	0xFE3
   299                           fsr1l	equ	0xFE1
   300                           indf2	equ	0xFDF
   301                           plusw2	equ	0xFDB
   302                           fsr2h	equ	0xFDA
   303                           fsr2l	equ	0xFD9
   304                           status	equ	0xFD8
   305                           
   306                           	psect	rparam
   307  0000                     tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           plusw1	equ	0xFE3
   315                           fsr1l	equ	0xFE1
   316                           indf2	equ	0xFDF
   317                           plusw2	equ	0xFDB
   318                           fsr2h	equ	0xFDA
   319                           fsr2l	equ	0xFD9
   320                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      46
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0      71
                                              0 COMRAM    26    26      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      2E       1       36.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E      15        0.0%
DATA                 0      0      2E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 11 05:20:49 2019

                     l21 7FDC                       u41 7FB8                       u50 7FE0  
                     u77 7FCE                      wreg 000FE8                     _LATC 000F8B  
                   _main 7F90                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _PORTB 000F81  
                  _PORTC 000F82                    _TRISB 000F93                    _TRISC 000F94  
                  main@i 0019                    main@j 0017                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
        __initialization 7F6A             __end_of_main 8000                   ??_main 0001  
          __activetblptr 000000             __pdataCOMRAM 001B                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 7F8A            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F6A  
                __ramtop 0600                  __ptext0 7F90                  main@arr 0003  
   end_of_initialization 7F8A                  postdec1 000FE5                  postinc0 000FEE  
              _PORTBbits 000F81            __pidataCOMRAM 7F56      start_initialization 7F6A  
              main@F3007 001B                copy_data0 7F7E                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0070  
