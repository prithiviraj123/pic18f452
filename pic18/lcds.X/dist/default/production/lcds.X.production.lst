

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Aug 20 00:33:25 2009

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4520 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _LATD	set	3980
    50  0000                     _LATCbits	set	3979
    51  0000                     _CMCON	set	4020
    52  0000                     _ADCON1	set	4033
    53  0000                     _TRISD	set	3989
    54  0000                     _TRISB	set	3987
    55  0000                     _TRISC	set	3988
    56  0000                     _PORTD	set	3971
    57  0000                     _PORTC	set	3970
    58                           
    59                           ; #config settings
    60                           
    61                           	psect	cinit
    62  007F76                     __pcinit:
    63                           	opt stack 0
    64  007F76                     start_initialization:
    65                           	opt stack 0
    66  007F76                     __initialization:
    67                           	opt stack 0
    68  007F76                     end_of_initialization:
    69                           	opt stack 0
    70  007F76                     __end_of__initialization:
    71                           	opt stack 0
    72  007F76  0100               	movlb	0
    73  007F78  EFE9  F03F         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	cstackCOMRAM
    76  000001                     __pcstackCOMRAM:
    77                           	opt stack 0
    78  000001                     ??_pulse:
    79                           
    80                           ; 1 bytes @ 0x0
    81  000001                     	ds	1
    82  000002                     command@cmd:
    83                           	opt stack 0
    84  000002                     data@data:
    85                           	opt stack 0
    86                           
    87                           ; 1 bytes @ 0x1
    88  000002                     	ds	1
    89  000003                     
    90                           ; 1 bytes @ 0x2
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 3 in file "lcdmain.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;		None
   101 ;; Return value:  Size  Location     Type
   102 ;;                  1    wreg      void 
   103 ;; Registers used:
   104 ;;		wreg, status,2, cstack
   105 ;; Tracked objects:
   106 ;;		On entry : 0/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   110 ;;      Params:         0       0       0       0       0       0       0
   111 ;;      Locals:         0       0       0       0       0       0       0
   112 ;;      Temps:          0       0       0       0       0       0       0
   113 ;;      Totals:         0       0       0       0       0       0       0
   114 ;;Total ram usage:        0 bytes
   115 ;; Hardware stack levels required when called:    3
   116 ;; This function calls:
   117 ;;		_command
   118 ;;		_data
   119 ;;		_init
   120 ;; This function is called by:
   121 ;;		Startup code after reset
   122 ;; This function uses a non-reentrant model
   123 ;;
   124                           
   125                           	psect	text0
   126  007FD2                     __ptext0:
   127                           	opt stack 0
   128  007FD2                     _main:
   129                           	opt stack 28
   130                           
   131                           ;lcdmain.c: 5: PORTC=0X00;
   132                           
   133                           ;incstack = 0
   134  007FD2  0E00               	movlw	0
   135  007FD4  6E82               	movwf	3970,c	;volatile
   136                           
   137                           ;lcdmain.c: 6: PORTD=0X00;
   138  007FD6  0E00               	movlw	0
   139  007FD8  6E83               	movwf	3971,c	;volatile
   140                           
   141                           ;lcdmain.c: 7: TRISC=0X00;
   142  007FDA  0E00               	movlw	0
   143  007FDC  6E94               	movwf	3988,c	;volatile
   144                           
   145                           ;lcdmain.c: 8: TRISB=0X00;
   146  007FDE  0E00               	movlw	0
   147  007FE0  6E93               	movwf	3987,c	;volatile
   148                           
   149                           ;lcdmain.c: 9: TRISD=0X00;
   150  007FE2  0E00               	movlw	0
   151  007FE4  6E95               	movwf	3989,c	;volatile
   152                           
   153                           ;lcdmain.c: 10: ADCON1=0X0F;
   154  007FE6  0E0F               	movlw	15
   155  007FE8  6EC1               	movwf	4033,c	;volatile
   156                           
   157                           ;lcdmain.c: 11: CMCON=0X07;
   158  007FEA  0E07               	movlw	7
   159  007FEC  6EB4               	movwf	4020,c	;volatile
   160                           
   161                           ;lcdmain.c: 12: init();
   162  007FEE  ECCC  F03F         	call	_init	;wreg free
   163  007FF2                     
   164                           ;lcdmain.c: 14: {
   165                           ;lcdmain.c: 15: command(0x80);
   166  007FF2  0E80               	movlw	128
   167  007FF4  ECC5  F03F         	call	_command
   168                           
   169                           ;lcdmain.c: 16: data('a');
   170  007FF8  0E61               	movlw	97
   171  007FFA  ECBE  F03F         	call	_data
   172  007FFE  D7F9               	goto	l25
   173  008000                     __end_of_main:
   174                           	opt stack 0
   175                           
   176 ;; *************** function _init *****************
   177 ;; Defined at:
   178 ;;		line 22 in file "lcd.c"
   179 ;; Parameters:    Size  Location     Type
   180 ;;		None
   181 ;; Auto vars:     Size  Location     Type
   182 ;;		None
   183 ;; Return value:  Size  Location     Type
   184 ;;                  1    wreg      void 
   185 ;; Registers used:
   186 ;;		wreg, cstack
   187 ;; Tracked objects:
   188 ;;		On entry : 0/0
   189 ;;		On exit  : 0/0
   190 ;;		Unchanged: 0/0
   191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   192 ;;      Params:         0       0       0       0       0       0       0
   193 ;;      Locals:         0       0       0       0       0       0       0
   194 ;;      Temps:          0       0       0       0       0       0       0
   195 ;;      Totals:         0       0       0       0       0       0       0
   196 ;;Total ram usage:        0 bytes
   197 ;; Hardware stack levels used:    1
   198 ;; Hardware stack levels required when called:    2
   199 ;; This function calls:
   200 ;;		_command
   201 ;; This function is called by:
   202 ;;		_main
   203 ;; This function uses a non-reentrant model
   204 ;;
   205                           
   206                           	psect	text1
   207  007F98                     __ptext1:
   208                           	opt stack 0
   209  007F98                     _init:
   210                           	opt stack 28
   211                           
   212                           ;lcd.c: 24: command(0x38);
   213                           
   214                           ;incstack = 0
   215  007F98  0E38               	movlw	56
   216  007F9A  ECC5  F03F         	call	_command
   217                           
   218                           ;lcd.c: 25: command(0x0f);
   219  007F9E  0E0F               	movlw	15
   220  007FA0  ECC5  F03F         	call	_command
   221                           
   222                           ;lcd.c: 26: command(0x01);
   223  007FA4  0E01               	movlw	1
   224  007FA6  ECC5  F03F         	call	_command
   225  007FAA  0012               	return		;funcret
   226  007FAC                     __end_of_init:
   227                           	opt stack 0
   228                           
   229 ;; *************** function _command *****************
   230 ;; Defined at:
   231 ;;		line 9 in file "lcd.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;  cmd             1    wreg     unsigned char 
   234 ;; Auto vars:     Size  Location     Type
   235 ;;  cmd             1    1[COMRAM] unsigned char 
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   245 ;;      Params:         0       0       0       0       0       0       0
   246 ;;      Locals:         1       0       0       0       0       0       0
   247 ;;      Temps:          0       0       0       0       0       0       0
   248 ;;      Totals:         1       0       0       0       0       0       0
   249 ;;Total ram usage:        1 bytes
   250 ;; Hardware stack levels used:    1
   251 ;; Hardware stack levels required when called:    1
   252 ;; This function calls:
   253 ;;		_pulse
   254 ;; This function is called by:
   255 ;;		_main
   256 ;;		_init
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text2
   261  007F8A                     __ptext2:
   262                           	opt stack 0
   263  007F8A                     _command:
   264                           	opt stack 28
   265                           
   266                           ;incstack = 0
   267                           ;command@cmd stored from wreg
   268  007F8A  6E02               	movwf	command@cmd,c
   269                           
   270                           ;lcd.c: 11: LATCbits.LC0=0;
   271  007F8C  908B               	bcf	3979,0,c	;volatile
   272                           
   273                           ;lcd.c: 12: LATD=cmd;
   274  007F8E  C002  FF8C         	movff	command@cmd,3980	;volatile
   275                           
   276                           ;lcd.c: 13: pulse();
   277  007F92  ECD6  F03F         	call	_pulse	;wreg free
   278  007F96  0012               	return		;funcret
   279  007F98                     __end_of_command:
   280                           	opt stack 0
   281                           
   282 ;; *************** function _data *****************
   283 ;; Defined at:
   284 ;;		line 15 in file "lcd.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;  data            1    wreg     unsigned char 
   287 ;; Auto vars:     Size  Location     Type
   288 ;;  data            1    1[COMRAM] unsigned char 
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   298 ;;      Params:         0       0       0       0       0       0       0
   299 ;;      Locals:         1       0       0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0
   301 ;;      Totals:         1       0       0       0       0       0       0
   302 ;;Total ram usage:        1 bytes
   303 ;; Hardware stack levels used:    1
   304 ;; Hardware stack levels required when called:    1
   305 ;; This function calls:
   306 ;;		_pulse
   307 ;; This function is called by:
   308 ;;		_main
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           	psect	text3
   313  007F7C                     __ptext3:
   314                           	opt stack 0
   315  007F7C                     _data:
   316                           	opt stack 29
   317                           
   318                           ;incstack = 0
   319                           ;data@data stored from wreg
   320  007F7C  6E02               	movwf	data@data,c
   321                           
   322                           ;lcd.c: 17: LATCbits.LC0=1;
   323  007F7E  808B               	bsf	3979,0,c	;volatile
   324                           
   325                           ;lcd.c: 18: LATD=data;
   326  007F80  C002  FF8C         	movff	data@data,3980	;volatile
   327                           
   328                           ;lcd.c: 19: pulse();
   329  007F84  ECD6  F03F         	call	_pulse	;wreg free
   330  007F88  0012               	return		;funcret
   331  007F8A                     __end_of_data:
   332                           	opt stack 0
   333                           
   334 ;; *************** function _pulse *****************
   335 ;; Defined at:
   336 ;;		line 2 in file "lcd.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   350 ;;      Params:         0       0       0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0
   352 ;;      Temps:          1       0       0       0       0       0       0
   353 ;;      Totals:         1       0       0       0       0       0       0
   354 ;;Total ram usage:        1 bytes
   355 ;; Hardware stack levels used:    1
   356 ;; This function calls:
   357 ;;		Nothing
   358 ;; This function is called by:
   359 ;;		_command
   360 ;;		_data
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text4
   365  007FAC                     __ptext4:
   366                           	opt stack 0
   367  007FAC                     _pulse:
   368                           	opt stack 28
   369                           
   370                           ;lcd.c: 4: LATCbits.LC1=1;
   371                           
   372                           ;incstack = 0
   373  007FAC  828B               	bsf	3979,1,c	;volatile
   374                           
   375                           ;lcd.c: 5: _delay((unsigned long)((10)*(20000000/4000.0)));
   376  007FAE  0E41               	movlw	65
   377  007FB0  6E01               	movwf	??_pulse& (0+255),c
   378  007FB2  0EEE               	movlw	238
   379  007FB4                     u17:
   380  007FB4  2EE8               	decfsz	wreg,f,c
   381  007FB6  D7FE               	bra	u17
   382  007FB8  2E01               	decfsz	??_pulse& (0+255),f,c
   383  007FBA  D7FC               	bra	u17
   384  007FBC  D000               	nop2	
   385                           
   386                           ;lcd.c: 6: LATCbits.LC1=0;
   387  007FBE  928B               	bcf	3979,1,c	;volatile
   388                           
   389                           ;lcd.c: 7: _delay((unsigned long)((10)*(20000000/4000.0)));
   390  007FC0  0E41               	movlw	65
   391  007FC2  6E01               	movwf	??_pulse& (0+255),c
   392  007FC4  0EEE               	movlw	238
   393  007FC6                     u27:
   394  007FC6  2EE8               	decfsz	wreg,f,c
   395  007FC8  D7FE               	bra	u27
   396  007FCA  2E01               	decfsz	??_pulse& (0+255),f,c
   397  007FCC  D7FC               	bra	u27
   398  007FCE  D000               	nop2	
   399  007FD0  0012               	return		;funcret
   400  007FD2                     __end_of_pulse:
   401                           	opt stack 0
   402  0000                     wreg	equ	0xFE8
   403                           wreg	equ	0xFE8
   404                           
   405                           	psect	rparam
   406  0000                     wreg	equ	0xFE8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_command
    _main->_data
    _init->_command
    _command->_pulse
    _data->_pulse

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                            _command
                               _data
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      15
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              1     1      0      15
                                              1 COMRAM     1     1      0
                              _pulse
 ---------------------------------------------------------------------------------
 (1) _data                                                 1     1      0      15
                                              1 COMRAM     1     1      0
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _pulse                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _command
     _pulse
   _data
     _pulse
   _init
     _command
       _pulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      2       2       1        1.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Aug 20 00:33:25 2009

                     l25 7FF2                       u17 7FB4                       u27 7FC6  
                    wreg 000FE8                     _LATD 000F8C                     _data 7F7C  
                   _main 7FD2                     _init 7F98                     start 0000  
           ___param_bank 000000                    ?_data 0001                    ?_main 0001  
                  ?_init 0001                    _CMCON 000FB4                    _PORTC 000F82  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95          __end_of_command 7F98                    _pulse 7FAC  
        __initialization 7F76             __end_of_data 7F8A             __end_of_main 8000  
           __end_of_init 7FAC                   ??_data 0002                   ??_main 0003  
                 ??_init 0003            __activetblptr 000000                   _ADCON1 000FC1  
                 ?_pulse 0001                ??_command 0002               __accesstop 0080  
__end_of__initialization 7F76            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_pulse 7FD2                  ??_pulse 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F76                  __ramtop 0600  
                __ptext0 7FD2                  __ptext1 7F98                  __ptext2 7F8A  
                __ptext3 7F7C                  __ptext4 7FAC                  _command 7F8A  
   end_of_initialization 7F76               command@cmd 0002      start_initialization 7F76  
               ?_command 0001           __size_of_pulse 0026                 _LATCbits 000F8B  
               __Hrparam 0000                 __Lrparam 0000         __size_of_command 000E  
               data@data 0002            __size_of_data 000E            __size_of_main 002E  
          __size_of_init 0014  
